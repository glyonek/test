;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : test2
;Version : 1
;Date    : 17.02.2019
;Author  : Kostya
;Company :
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 1,000000 MHz (8 MHz)
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;static char buff[30];
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <i2c.h>
;#include <stdio.h>
;#include "ssd1306.c"
;/*
;Библиотека для светодиодного
;OLED LCD SSD1306 дисплея.
;Библиотека сделана под CVAVR.
;22.12.2015 Виниченко А.В.
;*/
;
;#include <delay.h>
;
;void LCD_init(void);  //начальная инициализация дисплея
;void LCD_Commmand(unsigned char ControByte, unsigned char DataByte); //команды дисплею или данные
;void LCD_Goto(unsigned char x, unsigned char y);    //установить координаты
;void LCD_Clear(void);  //очистка всего дисплея
;//void LCD_Contrast(char set_contrast); //настройка контраста от 0 до 255
;void LCD_Blinc(unsigned int t,unsigned char x);  //t секунд ,  x раз
;void LCD_CharVeryBig(unsigned int c,unsigned char h); //
;void LCD_Printf(unsigned char* buf, unsigned char size); //печатает строку с размерами - 0 самый мелкий 2 - увеличиный - ...
;void LCD_Mode(char set_mode); //1 - inverted / 0 - normal
;void LCD_Sleep(char set);   //1 - on sleep / 0 - off sleep
;void ShowLine(unsigned char line);
;void ShowBigLine(unsigned char line);
;
;
;unsigned char LCD_X,LCD_Y;
;
;#define SSD1306_I2C_ADDRESS					 0x78
;// size
;#define SSD1306_LCDWIDTH                      125
;#define SSD1306_LCDHEIGHT                     64
;#define SSD1306_DEFAULT_SPACE                 5
;// Commands
;#define SSD1306_SETCONTRAST                  0x81
;#define SSD1306_DISPLAYALLON_RESUME          0xA4
;#define SSD1306_DISPLAYALLON                 0xA5
;#define SSD1306_NORMALDISPLAY                0xA6
;#define SSD1306_INVERTDISPLAY                0xA7
;#define SSD1306_DISPLAYOFF                   0xAE
;#define SSD1306_DISPLAYON                    0xAF
;#define SSD1306_SETDISPLAYOFFSET             0xD3
;#define SSD1306_SETCOMPINS                   0xDA
;#define SSD1306_SETVCOMDETECT                0xDB
;#define SSD1306_SETDISPLAYCLOCKDIV           0xD5
;#define SSD1306_SETPRECHARGE                 0xD9
;#define SSD1306_SETMULTIPLEX                 0xA8
;#define SSD1306_SETLOWCOLUMN                 0x00
;#define SSD1306_SETHIGHCOLUMN                0x10
;#define SSD1306_SETSTARTLINE                 0x40
;#define SSD1306_MEMORYMODE                   0x20
;#define SSD1306_COLUMNADDR                   0x21
;#define SSD1306_PAGEADDR                     0x22
;#define SSD1306_COMSCANINC                   0xC0
;#define SSD1306_COMSCANDEC                   0xC8
;#define SSD1306_SEGREMAP                     0xA0
;#define SSD1306_CHARGEPUMP                   0x8D
;#define SSD1306_EXTERNALVCC                   0x1
;#define SSD1306_SWITCHCAPVCC                  0x2
;// Scrolling #defines
;#define SSD1306_ACTIVATE_SCROLL               0x2F
;#define SSD1306_DEACTIVATE_SCROLL             0x2E
;#define SSD1306_SET_VERTICAL_SCROLL_AREA      0xA3
;#define SSD1306_RIGHT_HORIZONTAL_SCROLL       0x26
;#define SSD1306_LEFT_HORIZONTAL_SCROLL        0x27
;#define SSD1306_VERT_AND_RIGHT_HORIZ_SCROLL   0x29
;#define SSD1306_VERT_AND_LEFT_HORIZ_SCROLL    0x2A
;
;#define COMAND		                          0x00
;#define DATA		                          0x40
;
;flash unsigned char LCD_Buffer[0x0460] =      //0x0500
;{
;0x00, 0x00, 0x00, 0x00, 0x00,// 00 space
;0x00, 0x00, 0x5F, 0x00, 0x00,// 01 !
;0x00, 0x07, 0x00, 0x07, 0x00,// 02 "
;0x14, 0x7F, 0x14, 0x7F, 0x14,// 03
;0x24, 0x2A, 0x7F, 0x2A, 0x12,// 04
;0x23, 0x13, 0x08, 0x64, 0x62,// 05
;0x36, 0x49, 0x55, 0x22, 0x50,// 06
;0x00, 0x05, 0x03, 0x00, 0x00,// 07
;0x00, 0x1C, 0x22, 0x41, 0x00,// 08
;0x00, 0x41, 0x22, 0x1C, 0x00,// 09
;0x14, 0x08, 0x3E, 0x08, 0x14,// 0A
;0x08, 0x08, 0x3E, 0x08, 0x08,// 0B
;0x00, 0x50, 0x30, 0x00, 0x00,// 0C
;0x08, 0x08, 0x08, 0x08, 0x08,// 0D
;0x00, 0x60, 0x60, 0x00, 0x00,// 0E
;0x20, 0x10, 0x08, 0x04, 0x02,// 0F
;0x00, 0x00, 0x00, 0x00, 0x00,// 10
;0x00, 0x00, 0x5F, 0x00, 0x00,// 11
;0x00, 0x07, 0x00, 0x07, 0x00,// 12
;0x14, 0x7F, 0x14, 0x7F, 0x14,// 13
;0x24, 0x2A, 0x7F, 0x2A, 0x12,// 14
;0x23, 0x13, 0x08, 0x64, 0x62,// 15
;0x36, 0x49, 0x55, 0x22, 0x50,// 16
;0x00, 0x05, 0x03, 0x00, 0x00,// 17
;0x00, 0x1C, 0x22, 0x41, 0x00,// 18
;0x00, 0x41, 0x22, 0x1C, 0x00,// 19
;0x14, 0x08, 0x3E, 0x08, 0x14,// 1A
;0x08, 0x08, 0x3E, 0x08, 0x08,// 1B
;0x00, 0x50, 0x30, 0x00, 0x00,// 1C
;0x08, 0x08, 0x08, 0x08, 0x08,// 1D
;0x00, 0x60, 0x60, 0x00, 0x00,// 1E
;0x20, 0x10, 0x08, 0x04, 0x02,// 1F
;0x00, 0x00, 0x00, 0x00, 0x00,// 20 space
;0x00, 0x00, 0x5F, 0x00, 0x00,// 21 !
;0x00, 0x07, 0x00, 0x07, 0x00,// 22 "
;0x14, 0x7F, 0x14, 0x7F, 0x14,// 23 #
;0x24, 0x2A, 0x7F, 0x2A, 0x12,// 24 $
;0x23, 0x13, 0x08, 0x64, 0x62,// 25 %
;0x36, 0x49, 0x55, 0x22, 0x50,// 26 &
;0x00, 0x05, 0x03, 0x00, 0x00,// 27 '
;0x00, 0x1C, 0x22, 0x41, 0x00,// 28 (
;0x00, 0x41, 0x22, 0x1C, 0x00,// 29 )
;0x14, 0x08, 0x3E, 0x08, 0x14,// 2a *
;0x08, 0x08, 0x3E, 0x08, 0x08,// 2b +
;0x00, 0x50, 0x30, 0x00, 0x00,// 2c ,
;0x08, 0x08, 0x08, 0x08, 0x08,// 2d -
;0x00, 0x60, 0x60, 0x00, 0x00,// 2e .
;0x20, 0x10, 0x08, 0x04, 0x02,// 2f /
;0x3E, 0x51, 0x49, 0x45, 0x3E,// 30 0
;0x00, 0x42, 0x7F, 0x40, 0x00,// 31 1
;0x42, 0x61, 0x51, 0x49, 0x46,// 32 2
;0x21, 0x41, 0x45, 0x4B, 0x31,// 33 3
;0x18, 0x14, 0x12, 0x7F, 0x10,// 34 4
;0x27, 0x45, 0x45, 0x45, 0x39,// 35 5
;0x3C, 0x4A, 0x49, 0x49, 0x30,// 36 6
;0x01, 0x71, 0x09, 0x05, 0x03,// 37 7
;0x36, 0x49, 0x49, 0x49, 0x36,// 38 8
;0x06, 0x49, 0x49, 0x29, 0x1E,// 39 9
;0x00, 0x36, 0x36, 0x00, 0x00,// 3a :
;0x00, 0x56, 0x36, 0x00, 0x00,// 3b ;
;0x08, 0x14, 0x22, 0x41, 0x00,// 3c <
;0x14, 0x14, 0x14, 0x14, 0x14,// 3d =
;0x00, 0x41, 0x22, 0x14, 0x08,// 3e >
;0x02, 0x01, 0x51, 0x09, 0x06,// 3f ?
;0x32, 0x49, 0x79, 0x41, 0x3E,// 40 @
;0x7E, 0x11, 0x11, 0x11, 0x7E,// 41 A
;0x7F, 0x49, 0x49, 0x49, 0x36,// 42 B
;0x3E, 0x41, 0x41, 0x41, 0x22,// 43 C
;0x7F, 0x41, 0x41, 0x22, 0x1C,// 44 D
;0x7F, 0x49, 0x49, 0x49, 0x41,// 45 E
;0x7F, 0x09, 0x09, 0x09, 0x01,// 46 F
;0x3E, 0x41, 0x49, 0x49, 0x7A,// 47 G
;0x7F, 0x08, 0x08, 0x08, 0x7F,// 48 H
;0x00, 0x41, 0x7F, 0x41, 0x00,// 49 I
;0x20, 0x40, 0x41, 0x3F, 0x01,// 4a J
;0x7F, 0x08, 0x14, 0x22, 0x41,// 4b K
;0x7F, 0x40, 0x40, 0x40, 0x40,// 4c L
;0x7F, 0x02, 0x0C, 0x02, 0x7F,// 4d M
;0x7F, 0x04, 0x08, 0x10, 0x7F,// 4e N
;0x3E, 0x41, 0x41, 0x41, 0x3E,// 4f O
;0x7F, 0x09, 0x09, 0x09, 0x06,// 50 P
;0x3E, 0x41, 0x51, 0x21, 0x5E,// 51 Q
;0x7F, 0x09, 0x19, 0x29, 0x46,// 52 R
;0x46, 0x49, 0x49, 0x49, 0x31,// 53 S
;0x01, 0x01, 0x7F, 0x01, 0x01,// 54 T
;0x3F, 0x40, 0x40, 0x40, 0x3F,// 55 U
;0x1F, 0x20, 0x40, 0x20, 0x1F,// 56 V
;0x3F, 0x40, 0x38, 0x40, 0x3F,// 57 W
;0x63, 0x14, 0x08, 0x14, 0x63,// 58 X
;0x07, 0x08, 0x70, 0x08, 0x07,// 59 Y
;0x61, 0x51, 0x49, 0x45, 0x43,// 5a Z
;0x00, 0x7F, 0x41, 0x41, 0x00,// 5b [
;0x02, 0x04, 0x08, 0x10, 0x20,// 5c Yen Currency Sign
;0x00, 0x41, 0x41, 0x7F, 0x00,// 5d ]
;0x04, 0x02, 0x01, 0x02, 0x04,// 5e ^
;0x40, 0x40, 0x40, 0x40, 0x40,// 5f _
;0x00, 0x01, 0x02, 0x04, 0x00,// 60 `
;0x20, 0x54, 0x54, 0x54, 0x78,// 61 a
;0x7F, 0x48, 0x44, 0x44, 0x38,// 62 b
;0x38, 0x44, 0x44, 0x44, 0x20,// 63 c
;0x38, 0x44, 0x44, 0x48, 0x7F,// 64 d
;0x38, 0x54, 0x54, 0x54, 0x18,// 65 e
;0x08, 0x7E, 0x09, 0x01, 0x02,// 66 f
;0x0C, 0x52, 0x52, 0x52, 0x3E,// 67 g
;0x7F, 0x08, 0x04, 0x04, 0x78,// 68 h
;0x00, 0x44, 0x7D, 0x40, 0x00,// 69 i
;0x20, 0x40, 0x44, 0x3D, 0x00,// 6a j
;0x7F, 0x10, 0x28, 0x44, 0x00,// 6b k
;0x00, 0x41, 0x7F, 0x40, 0x00,// 6c l
;0x7C, 0x04, 0x18, 0x04, 0x78,// 6d m
;0x7C, 0x08, 0x04, 0x04, 0x78,// 6e n
;0x38, 0x44, 0x44, 0x44, 0x38,// 6f o
;0x7C, 0x14, 0x14, 0x14, 0x08,// 70 p
;0x08, 0x14, 0x14, 0x18, 0x7C,// 71 q
;0x7C, 0x08, 0x04, 0x04, 0x08,// 72 r
;0x08, 0x54, 0x54, 0x54, 0x20,// 73 s
;0x04, 0x3F, 0x44, 0x40, 0x20,// 74 t
;0x3C, 0x40, 0x40, 0x20, 0x7C,// 75 u
;0x1C, 0x20, 0x40, 0x20, 0x1C,// 76 v
;0x3C, 0x40, 0x30, 0x40, 0x3C,// 77 w
;0x44, 0x28, 0x10, 0x28, 0x44,// 78 x
;0x0C, 0x50, 0x50, 0x50, 0x3C,// 79 y
;0x44, 0x64, 0x54, 0x4C, 0x44,// 7a z
;0x00, 0x08, 0x36, 0x41, 0x00,// 7b <
;0x00, 0x00, 0x7F, 0x00, 0x00,// 7c |
;0x00, 0x41, 0x36, 0x08, 0x00,// 7d >
;0x10, 0x08, 0x08, 0x10, 0x08,// 7e Right Arrow ->
;0x78, 0x46, 0x41, 0x46, 0x78,// 7f Left Arrow <-
;0x00, 0x00, 0x00, 0x00, 0x00,// 80
;0x00, 0x00, 0x5F, 0x00, 0x00,// 81
;0x00, 0x07, 0x00, 0x07, 0x00,// 82
;0x14, 0x7F, 0x14, 0x7F, 0x14,// 83
;0x24, 0x2A, 0x7F, 0x2A, 0x12,// 84
;0x23, 0x13, 0x08, 0x64, 0x62,// 85
;0x36, 0x49, 0x55, 0x22, 0x50,// 86
;0x00, 0x05, 0x03, 0x00, 0x00,// 87
;0x00, 0x1C, 0x22, 0x41, 0x00,// 88
;0x00, 0x41, 0x22, 0x1C, 0x00,// 89
;0x14, 0x08, 0x3E, 0x08, 0x14,// 8A
;0x08, 0x08, 0x3E, 0x08, 0x08,// 8B
;0x00, 0x50, 0x30, 0x00, 0x00,// 8C
;0x08, 0x08, 0x08, 0x08, 0x08,// 8D
;0x00, 0x60, 0x60, 0x00, 0x00,// 8E
;0x20, 0x10, 0x08, 0x04, 0x02,// 8F
;0x00, 0x00, 0x00, 0x00, 0x00,// 90
;0x00, 0x00, 0x5F, 0x00, 0x00,// 91
;0x00, 0x07, 0x00, 0x07, 0x00,// 92
;0x14, 0x7F, 0x14, 0x7F, 0x14,// 93
;0x24, 0x2A, 0x7F, 0x2A, 0x12,// 94
;0x23, 0x13, 0x08, 0x64, 0x62,// 95
;0x36, 0x49, 0x55, 0x22, 0x50,// 96
;0x00, 0x05, 0x03, 0x00, 0x00,// 97
;0x00, 0x1C, 0x22, 0x41, 0x00,// 98
;0x00, 0x41, 0x22, 0x1C, 0x00,// 99
;0x14, 0x08, 0x3E, 0x08, 0x14,// 9A
;0x08, 0x08, 0x3E, 0x08, 0x08,// 9B
;0x00, 0x50, 0x30, 0x00, 0x00,// 9C
;0x08, 0x08, 0x08, 0x08, 0x08,// 9D
;0x00, 0x60, 0x60, 0x00, 0x00,// 9E
;0x20, 0x10, 0x08, 0x04, 0x02,// 9F
;0x00, 0x00, 0x00, 0x00, 0x00,// A0
;0x00, 0x00, 0x5F, 0x00, 0x00,// A1
;0x00, 0x07, 0x00, 0x07, 0x00,// A2
;0x14, 0x7F, 0x14, 0x7F, 0x14,// A3
;0x24, 0x2A, 0x7F, 0x2A, 0x12,// A4
;0x23, 0x13, 0x08, 0x64, 0x62,// A5
;0x36, 0x49, 0x55, 0x22, 0x50,// A6
;0x00, 0x05, 0x03, 0x00, 0x00,// A7
;0x00, 0x1C, 0x22, 0x41, 0x00,// A8
;0x00, 0x41, 0x22, 0x1C, 0x00,// A9
;0x14, 0x08, 0x3E, 0x08, 0x14,// AA
;0x08, 0x08, 0x3E, 0x08, 0x08,// AB
;0x00, 0x50, 0x30, 0x00, 0x00,// AC
;0x08, 0x08, 0x08, 0x08, 0x08,// AD
;0x00, 0x60, 0x60, 0x00, 0x00,// AE
;0x20, 0x10, 0x08, 0x04, 0x02,// AF
;//0x3E, 0x51, 0x49, 0x45, 0x3E,// B0
;0x00, 0x06, 0x09, 0x09, 0x06,
;0x00, 0x42, 0x7F, 0x40, 0x00,// B1
;0x42, 0x61, 0x51, 0x49, 0x46,// B2
;0x21, 0x41, 0x45, 0x4B, 0x31,// B3
;0x18, 0x14, 0x12, 0x7F, 0x10,// B4
;0x27, 0x45, 0x45, 0x45, 0x39,// B5
;0x3C, 0x4A, 0x49, 0x49, 0x30,// B6
;0x01, 0x71, 0x09, 0x05, 0x03,// B7
;0x36, 0x49, 0x49, 0x49, 0x36,// B8
;0x06, 0x49, 0x49, 0x29, 0x1E,// B9
;0x00, 0x36, 0x36, 0x00, 0x00,// BA
;0x00, 0x56, 0x36, 0x00, 0x00,// BB
;0x08, 0x14, 0x22, 0x41, 0x00,// BC
;0x14, 0x14, 0x14, 0x14, 0x14,// BD
;0x00, 0x41, 0x22, 0x14, 0x08,// BE
;0x02, 0x01, 0x51, 0x09, 0x06,// BF
;0x7E, 0x11, 0x11, 0x11, 0x7E,// C0 А
;0x7F, 0x49, 0x49, 0x49, 0x31,// C1 Б
;0x7F, 0x49, 0x49, 0x49, 0x36,// C2 В
;0x7F, 0x01, 0x01, 0x01, 0x03,// C3 Г
;0x60, 0x3E, 0x21, 0x21, 0x7F,// C4 Д
;0x7F, 0x49, 0x49, 0x49, 0x41,// C5 Е
;0x77, 0x08, 0x7F, 0x08, 0x77,// C6 Ж
;0x22, 0x41, 0x49, 0x49, 0x36,// C7 З
;0x7F, 0x10, 0x08, 0x04, 0x7F,// C8 И
;0x7F, 0x10, 0x09, 0x04, 0x7F,// C9 И
;0x7F, 0x08, 0x14, 0x22, 0x41,// CA К
;0x40, 0x3E, 0x01, 0x01, 0x7F,// CB Л
;0x7F, 0x02, 0x0C, 0x02, 0x7F,// CC М
;0x7F, 0x08, 0x08, 0x08, 0x7F,// CD Н
;0x3E, 0x41, 0x41, 0x41, 0x3E,// CE О
;0x7F, 0x01, 0x01, 0x01, 0x7F,// CF П
;0x7F, 0x09, 0x09, 0x09, 0x06,// D0 Р
;0x3E, 0x41, 0x41, 0x41, 0x22,// D1 С
;0x01, 0x01, 0x7F, 0x01, 0x01,// D2 Т
;0x27, 0x48, 0x48, 0x48, 0x3F,// D3 У
;0x1E, 0x21, 0x7F, 0x21, 0x1E,// D4 Ф
;0x63, 0x14, 0x08, 0x14, 0x63,// D5 Х
;0x3F, 0x20, 0x20, 0x3F, 0x60,// D6 Ц
;0x07, 0x08, 0x08, 0x08, 0x7F,// D7 Ч
;0x7F, 0x40, 0x7F, 0x40, 0x7F,// D8 Ш
;0x3F, 0x20, 0x3F, 0x20, 0x7F,// D9 Щ
;0x01, 0x7F, 0x48, 0x48, 0x30,// DA Ъ
;0x7F, 0x48, 0x30, 0x00, 0x7F,// DB Ы
;0x00, 0x7F, 0x48, 0x48, 0x30,// DC Ь
;0x22, 0x41, 0x49, 0x49, 0x3E,// DD Э
;0x7F, 0x08, 0x3E, 0x41, 0x3E,// DE Ю
;0x46, 0x29, 0x19, 0x09, 0x7F // DF Я
;};
;/*
;0x20, 0x54, 0x54, 0x54, 0x78,// E0 а
;0x3C, 0x4A, 0x4A, 0x4A, 0x30,// E1 б
;0x7C, 0x54, 0x54, 0x28, 0x00,// E2 в
;0x7C, 0x04, 0x04, 0x04, 0x04,// E3 г
;0x60, 0x38, 0x24, 0x24, 0x7C,// E4 д
;0x38, 0x54, 0x54, 0x54, 0x18,// E5 е
;0x6C, 0x10, 0x7C, 0x10, 0x6C,// E6 ж
;0x00, 0x44, 0x54, 0x54, 0x28,// E7 з
;0x7C, 0x20, 0x10, 0x08, 0x7C,// E8 и
;0x7C, 0x21, 0x12, 0x09, 0x7C,// E9 й
;0x7C, 0x10, 0x28, 0x44, 0x00,// EA к
;0x40, 0x38, 0x04, 0x04, 0x7C,// EB л
;0x7C, 0x08, 0x10, 0x08, 0x7C,// EC м
;0x7C, 0x10, 0x10, 0x10, 0x7C,// ED н
;0x38, 0x44, 0x44, 0x44, 0x38,// EE о
;0x7C, 0x04, 0x04, 0x04, 0x7C,// EF п
;0x7C, 0x14, 0x14, 0x14, 0x08,// F0 р
;0x38, 0x44, 0x44, 0x44, 0x00,// F1 с
;0x04, 0x04, 0x7C, 0x04, 0x04,// F2 т
;0x0C, 0x50, 0x50, 0x50, 0x3C,// F3 у
;0x08, 0x14, 0x7C, 0x14, 0x08,// F4 ф
;0x44, 0x28, 0x10, 0x28, 0x44,// F5 х
;0x3C, 0x20, 0x20, 0x3C, 0x60,// F6 ц
;0x0C, 0x10, 0x10, 0x10, 0x7C,// F7 ч
;0x7C, 0x40, 0x7C, 0x40, 0x7C,// F8 ш
;0x3C, 0x20, 0x3C, 0x20, 0x7C,// F9 щ
;0x04, 0x7C, 0x50, 0x50, 0x20,// FA ъ
;0x7C, 0x50, 0x20, 0x00, 0x7C,// FB ы
;0x00, 0x7C, 0x50, 0x50, 0x20,// FC ь
;0x28, 0x44, 0x54, 0x54, 0x38,// FD э
;0x7C, 0x10, 0x38, 0x44, 0x38,// FE ю
;0x48, 0x54, 0x34, 0x14, 0x7C // FF я
;}; */
;
;void LCD_init(void)
; 0000 001C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;  #asm("cli")
;PCODE: $0000000F VOL: 0
	cli
;PCODE: $00000010 VOL: 0
;  LCD_Sleep(0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;  delay_ms(10);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;  LCD_Commmand(COMAND, SSD1306_SETDISPLAYCLOCKDIV);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;  LCD_Commmand(COMAND, 0x80);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;  LCD_Commmand(COMAND, SSD1306_SETMULTIPLEX);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;  LCD_Commmand(COMAND, 0x3F);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;  LCD_Commmand(COMAND, SSD1306_SETDISPLAYOFFSET);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;  LCD_Commmand(COMAND, 0x00);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;  LCD_Commmand(COMAND, SSD1306_SETSTARTLINE | 0x00);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;    // We use internal charge pump
;  LCD_Commmand(COMAND, SSD1306_CHARGEPUMP);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;  LCD_Commmand(COMAND, 0x14);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;    // Horizontal memory mode
;  LCD_Commmand(COMAND, SSD1306_MEMORYMODE);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;  LCD_Commmand(COMAND, 0x00);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;  LCD_Commmand(COMAND, SSD1306_SEGREMAP | 0x1);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;  LCD_Commmand(COMAND, SSD1306_COMSCANDEC);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;  LCD_Commmand(COMAND, SSD1306_SETCOMPINS);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;  LCD_Commmand(COMAND, 0x12);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;    // Max contrast
;  LCD_Commmand(COMAND, SSD1306_SETCONTRAST);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;  LCD_Commmand(COMAND, 0xCF);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;  LCD_Commmand(COMAND, SSD1306_SETPRECHARGE);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;  LCD_Commmand(COMAND, 0xF1);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;  LCD_Commmand(COMAND, SSD1306_SETVCOMDETECT);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;  LCD_Commmand(COMAND, 0x40);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;  LCD_Commmand(COMAND, SSD1306_DISPLAYALLON_RESUME);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;    // Non-inverted display
;  LCD_Mode(0);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;    // Turn display back on
;  LCD_Sleep(1);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;
;  LCD_Clear();
;PCODE: $00000072 VOL: 0
;  LCD_Goto(0,0);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;  #asm("sei")
;PCODE: $00000077 VOL: 0
	sei
;PCODE: $00000078 VOL: 0
;}
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;
;/*
;void LCD_Contrast(char set_contrast)
;{
;  LCD_Commmand(COMAND, SSD1306_DISPLAYOFF);
;  delay_ms(10);
;  LCD_Commmand(COMAND, SSD1306_SETCONTRAST);
;  LCD_Commmand(COMAND, set_contrast);
;  LCD_Commmand(COMAND, SSD1306_DISPLAYON);
;}
;*/
;void LCD_Mode(char set_mode)
;{
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; if(set_mode==0){ LCD_Commmand(COMAND, SSD1306_NORMALDISPLAY); }
;PCODE: $0000007D VOL: 0
;	set_mode -> Y+0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; if(set_mode==1){ LCD_Commmand(COMAND, SSD1306_INVERTDISPLAY); }
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;}
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;
;void LCD_Sleep(char set)
;{
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;  if(set==0){LCD_Commmand(COMAND,SSD1306_DISPLAYOFF);}
;PCODE: $00000093 VOL: 0
;	set -> Y+0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;  if(set==1){LCD_Commmand(COMAND,SSD1306_DISPLAYON);}
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;}
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;
;void LCD_Commmand(unsigned char ControByte, unsigned char DataByte)
;{
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;  #asm("cli")
;PCODE: $000000A9 VOL: 0
;	ControByte -> Y+1
;	DataByte -> Y+0
;PCODE: $000000AA VOL: 0
	cli
;PCODE: $000000AB VOL: 0
;  i2c_start();
;PCODE: $000000AC VOL: 0
;  i2c_write(SSD1306_I2C_ADDRESS);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;  i2c_write(ControByte);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;  i2c_write(DataByte);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;  i2c_stop();
;PCODE: $000000B3 VOL: 0
;  #asm("sei")
;PCODE: $000000B4 VOL: 0
	sei
;PCODE: $000000B5 VOL: 0
;}
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;
;void LCD_Goto(unsigned char x, unsigned char y)
;{
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;  #asm("cli")
;PCODE: $000000BB VOL: 0
;	x -> Y+1
;	y -> Y+0
;PCODE: $000000BC VOL: 0
	cli
;PCODE: $000000BD VOL: 0
;	LCD_X = x;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;	LCD_Y = y;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;
;	// установка  и настройка
;	LCD_Commmand(COMAND, 0xB0 + y);//установить адрес начала координат
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;	LCD_Commmand(COMAND, x & 0xf);//установить нижний адрес столбца
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;	LCD_Commmand(COMAND,0x10 | (x >> 4));//установить верхний адрес столбца
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;  #asm("sei")
;PCODE: $000000D4 VOL: 0
	sei
;PCODE: $000000D5 VOL: 0
;}
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;
;void LCD_Clear(void)
;{
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;	unsigned short i;
;	unsigned short x=0;
;	unsigned short y=0;
;    #asm("cli")
;PCODE: $000000DB VOL: 0
;	i -> R16,R17
;	x -> R18,R19
;	y -> R20,R21
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
	cli
;PCODE: $000000E1 VOL: 0
;	LCD_Goto(0,0);
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;
;	for (i=0; i<(SSD1306_LCDWIDTH*SSD1306_LCDHEIGHT/8); i++) //(SSD1306_LCDWIDTH*SSD1306_LCDHEIGHT/8)
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;	{
;		LCD_CharVeryBig(' ',0);
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;		x ++;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;		if(x>SSD1306_LCDWIDTH)
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;		{
;			x =0;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;			y++;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;			LCD_Goto(0,y);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;		}
;	}
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;	LCD_X =SSD1306_DEFAULT_SPACE;
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;	LCD_Y =0;
;PCODE: $00000108 VOL: 0
;    #asm("sei");
;PCODE: $00000109 VOL: 0
	sei
;PCODE: $0000010A VOL: 0
;}
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;void LCD_Blinc(unsigned int t,unsigned char x )
;{
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;  unsigned char xx = 0;
;   for (xx=0; xx<x; xx++)
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;	t -> Y+2
;	x -> Y+1
;	xx -> R17
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;	{
;       LCD_Mode(1);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;       delay_ms(t);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;       LCD_Mode(0);
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;       delay_ms(t);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;    }
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;}
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;
;void LCD_CharVeryBig(unsigned int c,unsigned char h)
;{
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;  unsigned char x  = 0;
;  unsigned int  m  = 0;
;  unsigned char cl = 0;
;  #asm("cli")
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;	c -> Y+5
;	h -> Y+4
;	x -> R17
;	m -> R18,R19
;	cl -> R16
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
	cli
;PCODE: $0000013B VOL: 0
;  i2c_start();
;PCODE: $0000013C VOL: 0
;  i2c_write(SSD1306_I2C_ADDRESS);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;  i2c_write(DATA);//data mode
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;  for (x=0; x<5; x++)
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;	{
;    //0x27, 0x48, 0x48, 0x48, 0x3F,// D3 У
;
;         m = LCD_Buffer[c*5+x];
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;         cl=m;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;         if(h==1)
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;         {
;         i2c_write(cl);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;         }
;         else
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;         if(h==2)
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;         {
;             cl = 0;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;             if (0b00000001 == (m & 0b00000001)) { cl =cl+0b00000011;};
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;             if (0b00000010 == (m & 0b00000010)) { cl =cl+0b00001100;};
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;             if (0b00000100 == (m & 0b00000100)) { cl =cl+0b00110000;};
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;             if (0b00001000 == (m & 0b00001000)) { cl =cl+0b11000000;};
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;         i2c_write(cl);
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;         }
;         else if(h==3)
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;         {
;             cl = 0;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;             if (0b00010000 == (m & 0b00010000)) { cl =cl+0b00000011;};
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;             if (0b00100000 == (m & 0b00100000)) { cl =cl+0b00001100;};
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;             if (0b01000000 == (m & 0b01000000)) { cl =cl+0b00110000;};
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;             if (0b10000000 == (m & 0b10000000)) { cl =cl+0b11000000;};
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;         i2c_write(cl);
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;         }
;         i2c_write(cl);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;    }
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;
;    i2c_write(0x00);  //пробеол в 1 точку между символами
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;//    i2c_write(0x00);  //пробеол в 1 точку между символами
;    i2c_stop();    // stop transmitting
;PCODE: $000001B1 VOL: 0
;	if(h==0){
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;        LCD_X += 6;
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;    }
; 	else{
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;        LCD_X += 12;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;    }
;PCODE: $000001BD VOL: 0
;  #asm("sei")
;PCODE: $000001BE VOL: 0
	sei
;PCODE: $000001BF VOL: 0
;}
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;
;void LCD_Printf(unsigned char* buf, unsigned char size) //выводим строку из буфера
;{
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;
;        while ((*buf!=0)&&(LCD_X<SSD1306_LCDWIDTH))
;PCODE: $000001C6 VOL: 0
;	*buf -> Y+1
;	size -> Y+0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;        {
;           // if((LCD_X>SSD1306_LCDWIDTH)||(LCD_X<5)){LCD_X=SSD1306_DEFAULT_SPACE;}
;            LCD_CharVeryBig(*buf++,size);
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;        }
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;
;}
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;void ShowLine(unsigned char line)
;{
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;    LCD_Goto(0,line);
;PCODE: $000001E1 VOL: 0
;	line -> Y+0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;    LCD_Printf(buff,0);  //  вывод на дисплей
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;}
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;void ShowBigLine(unsigned char line)
;{
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;    LCD_Goto(0,line);
;PCODE: $000001EF VOL: 0
;	line -> Y+0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;    LCD_Printf(buff,2);  //  вывод на дисплей
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;    LCD_Goto(0,line+1);
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;    LCD_Printf(buff,3);  //  вывод на дисплей
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;}
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;
;
;
;
;
;
;
;
;// Voltage Reference: Int., cap. on AREF
;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;//#define PWR_LCD             PORTD.4
;#define STARTER_REL         PORTB.0
;
;#define GEN_REL             PORTD.2
;#define LINE_REL            PORTD.3
;#define ON_REL              PORTD.4
;#define OFF_REL             PORTD.5
;#define VALVE_U_REL         PORTD.6
;#define VALVE_D_REL         PORTD.7
;
;#define ROTOR_PIN           PINC.4
;#define GEN_OUT_PIN         PIND.0
;
;
;#define KEY_E               PINB.4
;#define KEY_U               PINB.3
;#define KEY_D               PINB.2
;#define KEY_SIG_NUM         10
;#define GO_TO_OPTIONS       20
;#define INFOLINE1           6
;#define INFOLINE2           7
;#define LAST_MODE_MENU      3
;#define FIRST_OPTION_MENU   10      //
;#define LAST_OPTION_MENU    16      //
;
;#define U1_MIN              140      //
;#define U1_MAX              265      //
;
;#define ONE_SECOND          4000    //
;#define HALF_SECOND         2000    //
;#define QUARTER_SECOND      1000    //
;#define NEXT_ZAPUSK_SECOND  20000   // 5c
;
;#define RAZGON              5       // 5c
;#define PODSVETKA           60
;
;// Global variables
;eeprom unsigned char Termo[256]=            // +50C
;{175,170,155,145,135,130,125,120,117,115,
; 112,110,107,105,104,102,100, 99, 98, 96,
;  95, 94, 93, 91, 90, 89, 88, 87, 86, 85,
;  84, 84, 83, 82, 82, 81, 80, 80, 79, 78,
;  78, 77, 77, 76, 76, 75, 75, 74, 74, 73,
;  72, 72, 71, 71, 70, 70, 69, 69, 68, 68,
;  68, 67, 67, 67, 66, 66, 65, 65, 65, 64,
;  64, 64, 63, 63, 63, 62, 62, 62, 61, 61,
;  61, 60, 60, 60, 60, 59, 59, 59, 58, 58,
;  58, 58, 57, 57, 57, 56, 56, 56, 55, 55,
;  55, 55, 55, 54, 54, 54, 54, 53, 53, 53,
;  53, 53, 52, 52, 52, 52, 51, 51, 51, 51,
;  50, 50, 50, 50, 49, 49, 49, 49, 49, 49,
;  48, 48, 48, 48, 48, 47, 47, 47, 47, 47,
;  47, 46, 46, 46, 46, 46, 45, 45, 45, 45,
;  45, 44, 44, 44, 44, 44, 44, 43, 43, 43,
;  43, 43, 43, 43, 42, 42, 42, 42, 42, 41,
;  41, 41, 41, 41, 41, 40, 40, 40, 40 ,40,
;  40, 39, 39, 39, 39, 39, 39, 39, 38, 38,
;  38, 38, 38, 38, 38, 37, 37, 37, 37, 37,
;  37, 37, 36, 36, 36, 36, 36, 35, 35, 35,
;  35, 35, 35, 35, 34, 34, 34, 34, 34, 34,
;  34, 33, 33, 33, 33, 33, 33, 33, 33, 32,
;  32, 32, 32, 32, 32, 32, 31, 31, 31, 31,
;  31, 31, 31, 30, 30, 30, 30, 30, 30, 30,
;  30, 29, 29, 29, 20, 20};
;//                                                                                                  В МЕНЮ!
;eeprom unsigned char typeEEP = 0;           // тип електростанціі                                       -
;eeprom unsigned char t1EEP   =10;           // час переходу на генератор                                -
;eeprom unsigned char t2EEP   =10;           // час переходу на мережу                                   -
;eeprom unsigned char t3EEP   = 6;           // час роботи стартера                                      -
;eeprom unsigned char t4EEP   = 8;           // час роботи із заслонкою                                  V
;eeprom unsigned char t5EEP   = 5;           // час без нагрузки  (прогрев в нормальном режиме)          V
;                                            // Охлаждение - в 2 раза больше чем прогрев бед нагрузки
;//eeprom unsigned char t6EEP =10;           // час охолодження
;
;eeprom unsigned char TminZEEP=20;           // Мінімальна температура прогріву генератора с заслонкой
;eeprom unsigned char TminNEEP=50;           // Мінімальна температура прогріву генератора               -
;eeprom unsigned char Z_EEP   = 0;           // zaslonka/klapan                                          V
;eeprom unsigned char R_EEP   = 0;           // Проверка сигнала "Вращение ротора"                       V
;eeprom unsigned char KilkistZapuskiv_EEP=3; // Количество попыток запуска                               V
;
;eeprom unsigned int  NarabotkaEEP=0;
;eeprom unsigned char TO_EEP=1;           //TO заноситься 1 якщо пора робити ТО, можно скинути із меню
;
;
;static unsigned char type,t1,t2,t3,t4,t5,TminZ,TminN,KilkistZapuskiv;//,Narabotka,;
;static unsigned char AvtRu=0;               //0-Auto; 1-Ru4noy
;static bit z=0;
;static bit r=0;
;//static bit rbit=0;
;static bit TO_output=0;
;
;static unsigned char up,down,enter;
;static unsigned char PositionPointer = 1;

	.DSEG
;static bit podmenu=0;
;
;static unsigned char podsvet=60; //sec
;static unsigned int  U_Bat=0;
;static unsigned int U1;
;static int T;
;
;static unsigned char rotor= 0;
;//static unsigned char average_ADC_counter=0;
;static unsigned int interrapt_counter=0;
;static unsigned char second_counter=0;
;static unsigned int  minut_counter=0;
;
;unsigned int  U_Bat_ADC=0;
;unsigned int  T_ADC=0;
;unsigned int  U1_ADC=0;
;
;static unsigned int temp;
;
;
;//char buff[30];  //буфер дисплея
;
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0097 {

	.CSEG
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 0098 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $00000206 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0099 // Delay needed for the stabilization of the ADC input voltage
; 0000 009A delay_us(10);
;PCODE: $0000020A VOL: 0
; 0000 009B // Start the AD conversion
; 0000 009C ADCSRA|=(1<<ADSC);
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 009D // Wait for the AD conversion to complete
; 0000 009E while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 009F ADCSRA|=(1<<ADIF);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 00A0 return ADCW;
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 00A1 }
;PCODE: $00000218 VOL: 0
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;void UpDownEnterKey()       //перенести в прерівание!!!
; 0000 00A6 {
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00A7  //Main menu
; 0000 00A8  if((PositionPointer>=1)&(PositionPointer<=LAST_MODE_MENU))
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 00A9  {
; 0000 00AA     if((up==1)|(up>KEY_SIG_NUM)){PositionPointer++;up=2;};
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 00AB     if((down==1)|(down>KEY_SIG_NUM)){PositionPointer--;down=2;};
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 00AC 
; 0000 00AD     if(PositionPointer>LAST_MODE_MENU){PositionPointer=LAST_MODE_MENU;} //limits of Main menu
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 00AE     if(PositionPointer<1){PositionPointer=1;}
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 00AF     // Go to Options menu
; 0000 00B0     if((enter>GO_TO_OPTIONS)&(PositionPointer==LAST_MODE_MENU)){PositionPointer=FIRST_OPTION_MENU;enter=2;LCD_Clear();Ki ...
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 00B1     if((enter>GO_TO_OPTIONS)&(PositionPointer==2)){PositionPointer=30;enter=2;KilkistZapuskiv=KilkistZapuskiv_EEP;}; //н ...
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 00B2 
; 0000 00B3   }
; 0000 00B4   if((PositionPointer>=FIRST_OPTION_MENU)&(PositionPointer<=LAST_OPTION_MENU))
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 00B5   {
; 0000 00B6         if(podmenu == 0)
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 00B7         {
; 0000 00B8             if((up==1)|(up>KEY_SIG_NUM)){PositionPointer++;up=2;};
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 00B9             if((down==1)|(down>KEY_SIG_NUM)){PositionPointer--;down=2;};
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 00BA         }
; 0000 00BB 
; 0000 00BC         if((enter==1)&(PositionPointer!=LAST_OPTION_MENU))
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 00BD             {
; 0000 00BE 
; 0000 00BF                 podmenu=!podmenu;
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 00C0                 enter=2;
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 00C1                 if(podmenu==0){
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 00C2                     #asm("cli")
;PCODE: $000002AE VOL: 0
	cli
;PCODE: $000002AF VOL: 0
; 0000 00C3                     typeEEP=type;
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 00C4                     t1EEP=t1;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 00C5                     t2EEP=t2;
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 00C6                     t3EEP=t3;
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 00C7                     t4EEP=t4;
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 00C8                     t5EEP=t5;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 00C9                     TminZEEP=TminZ;
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 00CA                     TminNEEP=TminN;
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 00CB                     KilkistZapuskiv_EEP=KilkistZapuskiv;
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
; 0000 00CC                     Z_EEP=z;
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 00CD                     R_EEP=r;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
; 0000 00CE                     #asm("sei");
;PCODE: $000002D3 VOL: 0
	sei
;PCODE: $000002D4 VOL: 0
; 0000 00CF                 }
; 0000 00D0             }
;PCODE: $000002D5 VOL: 0
; 0000 00D1         if(PositionPointer>LAST_OPTION_MENU){PositionPointer=FIRST_OPTION_MENU;}  //limits of Options menu
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 00D2         if(PositionPointer<FIRST_OPTION_MENU){PositionPointer=LAST_OPTION_MENU;}
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 00D3 
; 0000 00D4         if((enter>GO_TO_OPTIONS)&(PositionPointer==LAST_OPTION_MENU)){PositionPointer=LAST_MODE_MENU;enter=2;LCD_Clear() ...
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 00D5   }
;PCODE: $000002F1 VOL: 0
; 0000 00D6 }
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 00DA {
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
; 0000 00DB #asm("cli")
;PCODE: $000002F7 VOL: 0
	cli
;PCODE: $000002F8 VOL: 0
; 0000 00DC 
; 0000 00DD     if(rotor>8){STARTER_REL=0;}//ротор працює- стартер не потрібен відключаємо стартер v1.4)
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
; 0000 00DE     if(ROTOR_PIN==0){rotor=rotor+1;}else{rotor=rotor-1;};
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 00DF     if(rotor<1) rotor=1;
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 00E0     if(rotor>10) rotor=10;
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
; 0000 00E1 
; 0000 00E2     if(KEY_U==0){up=up+1;podsvet=PODSVETKA;}      else  {up=0;};
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 00E3     if(KEY_D==0){down=down+1;podsvet=PODSVETKA;}  else  {down=0;};
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
; 0000 00E4     if(KEY_E==0){enter=enter+1;podsvet=PODSVETKA;}else  {enter=0;};   //beep begin -DDRD.2=1;
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
; 0000 00E5 
; 0000 00E6     if(up>99) up=99;
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 00E7     if(down>99) down=99;
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
; 0000 00E8     if(enter>99) enter=99;
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
; 0000 00E9     UpDownEnterKey();
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 00EA /*
; 0000 00EB     U_Bat_ADC=read_adc(0);
; 0000 00EC     U1_ADC=read_adc(2);
; 0000 00ED     T_ADC=read_adc(1);
; 0000 00EE 
; 0000 00EF     T_ADC=T_ADC/4;
; 0000 00F0     T=Termo[T_ADC];
; 0000 00F1     T=T-50;
; 0000 00F2     U_Bat=(U_Bat_ADC*20)/102; //останній розряд- десяті !!!!при виводі ділити на 10
; 0000 00F3     U1=(U1_ADC*11)/41;//ціле без десятих
; 0000 00F4 */
; 0000 00F5     U_Bat_ADC=U_Bat_ADC+read_adc(1);
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 00F6     U_Bat_ADC=U_Bat_ADC>>1;
;PCODE: $00000355 VOL: 0
; 0000 00F7     U1_ADC=U1_ADC+read_adc(0);
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0000 00F8     U1_ADC=U1_ADC>>1;
;PCODE: $0000035A VOL: 0
; 0000 00F9 
; 0000 00FA     T_ADC=T_ADC+read_adc(5);
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
; 0000 00FB     T_ADC=T_ADC>>1;
;PCODE: $0000035F VOL: 0
; 0000 00FC 
; 0000 00FD 
; 0000 00FE     if(interrapt_counter>=31) //61~2sec -   8 mHz
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
; 0000 00FF     {
; 0000 0100         U_Bat=U_Bat_ADC/5; //останній розряд- десяті !!!!при виводі ділити на 10
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 0101         U1=(U1_ADC*11)/41;//ціле без десятих
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
; 0000 0102         T=Termo[T_ADC>>2]; // divide 4
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 0103         T=T-50;
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0000 0104 
; 0000 0105         interrapt_counter=0;
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
; 0000 0106         second_counter++;
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
; 0000 0107         if(podsvet>0)podsvet--;
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 0108 
; 0000 0109         ////////////////TO
; 0000 010A         if(TO_EEP!=0)
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
; 0000 010B         {
; 0000 010C             if (second_counter%2!=0){TO_output=1; }
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 010D             else{TO_output=0;};//БЛИМАННЯ  ТО
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
; 0000 010E         }
; 0000 010F         ////////////////TO
; 0000 0110           if(second_counter>=59)
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 0111         {
; 0000 0112             second_counter=0;
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
; 0000 0113             podsvet=10;
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
; 0000 0114             if(PositionPointer==32){minut_counter++;};
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 0115         }
; 0000 0116     }
;PCODE: $000003A7 VOL: 0
; 0000 0117     interrapt_counter++;
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 0118 
; 0000 0119 // временная информация
; 0000 011A 
; 0000 011B 
; 0000 011C #asm("sei")
;PCODE: $000003AD VOL: 0
	sei
;PCODE: $000003AE VOL: 0
; 0000 011D }
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;void PerehodNaGenerator()
; 0000 0120 {
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
; 0000 0121         LINE_REL=1; // відключаємо МЕРЕЖУ
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
; 0000 0122         delay_ms(HALF_SECOND);
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
; 0000 0123         GEN_REL=1; // Підключаємо генератор
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
; 0000 0124 }
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;void PerehodNaMereju()
; 0000 0127 {
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
; 0000 0128         GEN_REL=0; // відключаємо ГЕНЕРАТОР
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 0129         delay_ms(HALF_SECOND);
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
; 0000 012A         LINE_REL=0; // Підключаємо МЕРЕЖУ
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0000 012B }
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;void Klapan_off()
; 0000 012E {
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
; 0000 012F #asm("cli")
;PCODE: $000003C8 VOL: 0
	cli
;PCODE: $000003C9 VOL: 0
; 0000 0130 LCD_Clear();
;PCODE: $000003CA VOL: 0
; 0000 0131             temp=15;  // загружаємо час перекриття паливного клапану (при зупинці)
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 0132             OFF_REL=1; // перекриваэмо паливний клапан
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
; 0000 0133             while (temp!=0){
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
; 0000 0134 //                 sprintf(buff," ТОПЛИВНЫЙ  "); ShowBigLine(3);
; 0000 0135                     sprintf(buff," Т.КЛАП%2.uc",temp);ShowBigLine(5);
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 0136                     delay_ms(ONE_SECOND);
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
; 0000 0137                    // PORTD.6=0;//вимикаємо запалення после первой секунды роботы клапана
; 0000 0138                     temp--;
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
; 0000 0139                  };
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
; 0000 013A             OFF_REL=0; // відкриваэмо паливний клапан
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 013B             ON_REL=0;//вимикаємо запалення
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 013C LCD_Clear();
;PCODE: $000003ED VOL: 0
; 0000 013D #asm("sei")
;PCODE: $000003EE VOL: 0
	sei
;PCODE: $000003EF VOL: 0
; 0000 013E }
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
;
;
;void MainInfo()
; 0000 0144 {
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
; 0000 0145     sprintf(buff," Uin =%4.uB ",U1);ShowBigLine(3);
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
; 0000 0146     sprintf(buff,"       Ub = %2.u.%1.uB       ",U_Bat/10,U_Bat%10);ShowLine(5);
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 0147 //    sprintf(buff,"  Ub =%2.u.%1.uB N:%5.uh ",U_Bat/10,U_Bat%10,NarabotkaEEP/6);ShowLine(5);
; 0000 0148 //    LCD_Goto(0,5);
; 0000 0149 //    LCD_Printf(buff,1);  //  вывод на дисплей
; 0000 014A //            sprintf(buff,"      N:%6.uh       ",NarabotkaEEP/6);
; 0000 014B //            sprintf(buff,"СИГНАЛ:'TO'  N:%5.uh ",NarabotkaEEP/6); ShowLine(INFOLINE1);
; 0000 014C //sprintf(buff,"  ЗАПУСКА ЭЛ.СТАНЦИИ  "); ShowLine(INFOLINE2);
; 0000 014D //sprintf(buff," Uin =%4.uB Ubat=%2.u.%1.uB ",U1,U_Bat/10,U_Bat%10);ShowLine(2);
; 0000 014E     if(TO_EEP)
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 014F     {
; 0000 0150         if(TO_output)
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
; 0000 0151         {
; 0000 0152             sprintf(buff,"                      ");
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
; 0000 0153         }
; 0000 0154         else
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
; 0000 0155         {
; 0000 0156             sprintf(buff," !!! ОБСЛУЖИВАНИЕ !!! ");
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
; 0000 0157 
; 0000 0158         }
;PCODE: $00000432 VOL: 0
; 0000 0159         ShowLine(INFOLINE2);
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
; 0000 015A     }
; 0000 015B 
; 0000 015C             if (T<0){  sprintf(buff,"  T =-%3.i*C N:%5.uh ",-T,NarabotkaEEP/6);}
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
; 0000 015D                 else{  sprintf(buff,"  T = %3.i*C N:%5.uh ",T,NarabotkaEEP/6);};
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
; 0000 015E             if (T<-25){sprintf(buff,"  T = n/c   N:%5.uh ",NarabotkaEEP/6);};  ShowLine(6);
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
; 0000 015F }
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;//--------------------------------    MAIN     ----------------------------------------------------------
;//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;void main(void)
; 0000 0164 {
;PCODE: $0000047B VOL: 0
; 0000 0165 // Declare your local variables here
; 0000 0166 
; 0000 0167 // Input/Output Ports initialization
; 0000 0168 
; 0000 0169 PORTB=0b00000000; DDRB =0b00100011;         // 0-START ; 1,5 - OLED; 2,3,4 -keys;  6,7 - zaslonka
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
; 0000 016A PORTC=0b00000000; DDRC =0b00000000;         //
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
; 0000 016B PORTD=0b00000000; DDRD =0b11111100;
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
; 0000 016C 
; 0000 016D // Timer/Counter 0 initialization
; 0000 016E // Clock source: System Clock; Clock value: 0,977 kHz ???
; 0000 016F TCCR0=(1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
; 0000 0170 TCNT0=0x00;
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
; 0000 0171 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0172 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
; 0000 0173 // External Interrupt(s) initialization  INT0: Off; INT1: Off
; 0000 0174 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
; 0000 0175 // USART initialization USART disabled
; 0000 0176 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
; 0000 0177 // Analog Comparator: Off
; 0000 0178 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
; 0000 0179 // ADC Clock frequency: 1000.000 kHz, AREF pin
; 0000 017A ADMUX=ADC_VREF_TYPE;
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
; 0000 017B ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
; 0000 017C SFIOR=(0<<ACME);
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
; 0000 017D 
; 0000 017E // Bit-Banged I2C Bus initialization
; 0000 017F // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 0180 ///////////////////////////////////////////////////////////////////////////////
; 0000 0181 // Init Variables and sequenses
; 0000 0182 
; 0000 0183 PositionPointer=1;
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
; 0000 0184 //Narabotka=0;
; 0000 0185 // загружаємо із EEPROM
; 0000 0186 type=typeEEP;
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
; 0000 0187 t1=t1EEP;
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
; 0000 0188 t2=t2EEP;
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
; 0000 0189 t3=t3EEP;
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
; 0000 018A t4=t4EEP;
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
; 0000 018B t5=t5EEP;
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
; 0000 018C //t6=t6EEP;
; 0000 018D TminZ=TminZEEP;
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
; 0000 018E TminN=TminNEEP;
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0000 018F z=Z_EEP;
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
; 0000 0190 r=R_EEP;
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
; 0000 0191 KilkistZapuskiv=KilkistZapuskiv_EEP;
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
; 0000 0192 //EEPROM
; 0000 0193 
; 0000 0194 U1=220;
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
; 0000 0195 i2c_init();
;PCODE: $000004C3 VOL: 0
; 0000 0196 #asm("sei")    // Global enable interrupts
;PCODE: $000004C4 VOL: 0
	sei
;PCODE: $000004C5 VOL: 0
; 0000 0197 //   PWR_LCD=1;
; 0000 0198 ///////////////////////////////////////////////////////////////////////////////
; 0000 0199 
; 0000 019A     LCD_init();
;PCODE: $000004C6 VOL: 0
; 0000 019B     sprintf(buff," MicroCraft "); ShowBigLine(0);
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
; 0000 019C     LCD_Goto(45,3);
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
; 0000 019D 
; 0000 019E     sprintf(buff,"(TM)");
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
; 0000 019F     LCD_Printf(buff,1);  //  вывод на дисплей
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
; 0000 01A0     LCD_Goto(0,6);
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
; 0000 01A1     sprintf(buff," PGSII  v.2 ");
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
; 0000 01A2     LCD_Printf(buff,1);  //  вывод на дисплей
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
; 0000 01A3 
; 0000 01A4     LCD_Blinc(QUARTER_SECOND,3);
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
; 0000 01A5 /*
; 0000 01A6 //    delay_ms(5000);
; 0000 01A7 
; 0000 01A8     //     LCD_DrawImage(0);
; 0000 01A9     //     delay_ms(5000);
; 0000 01AA //LCD_Clear();
; 0000 01AB     //       LCD_Contrast(1);
; 0000 01AC     */
; 0000 01AD ///////////////////////////////////////////////////////////////////////////////
; 0000 01AE while (1)
;PCODE: $000004F8 VOL: 0
; 0000 01AF     {
; 0000 01B0       #asm("cli")
;PCODE: $000004F9 VOL: 0
	cli
;PCODE: $000004FA VOL: 0
; 0000 01B1       if(podmenu == 0){LCD_Mode(0);}
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
; 0000 01B2       else{LCD_Mode(1);}
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
; 0000 01B3       #asm("sei")
;PCODE: $00000505 VOL: 0
	sei
;PCODE: $00000506 VOL: 0
; 0000 01B4 ///////////////////////////////////////////////////////////////////////////////
; 0000 01B5 //    sprintf(buff,"  R:%2.u S%3.u e:%2.u p:%2.u",rotor,second_counter,enter,PositionPointer);
; 0000 01B6 //    sprintf(buff,"%3.u %3.u N:%4.uч p%2.u",second_counter,minut_counter,NarabotkaEEP,PositionPointer);
; 0000 01B7 //    ShowLine(7);
; 0000 01B8 
; 0000 01B9 //    sprintf(buff,"      N:%6.uч     ",NarabotkaEEP/6);
; 0000 01BA //    ShowLine(7);
; 0000 01BB 
; 0000 01BC //                        sprintf(buf2,"N=%4.uА ",NarabotkaMinEEP/10);
; 0000 01BD ///////////////////////////////////////////////////////////////////////////////
; 0000 01BE if (minut_counter>=10)
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
; 0000 01BF {
; 0000 01C0     #asm("cli")
;PCODE: $0000050A VOL: 0
	cli
;PCODE: $0000050B VOL: 0
; 0000 01C1     NarabotkaEEP++;
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 01C2     minut_counter=0;
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
; 0000 01C3     if ((NarabotkaEEP==120)|(NarabotkaEEP==600)|(NarabotkaEEP==1200)|(NarabotkaEEP==1800)|(NarabotkaEEP==2400)){Narabotk ...
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
; 0000 01C4     #asm("sei")
;PCODE: $00000534 VOL: 0
	sei
;PCODE: $00000535 VOL: 0
; 0000 01C5 };            //   для підрахунку 10хв
;PCODE: $00000536 VOL: 0
; 0000 01C6 ///////////////////////////////////////////////////////////////////////////////
; 0000 01C7     switch (PositionPointer){
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
; 0000 01C8     ///////////////////////////////////////////////////////////////////////////////
; 0000 01C9         case 1: // автоматичний запуск
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
; 0000 01CA             //if(((up==1)|(up>KEY_SIG_NUM))&(podmenu==1)){#asm("cli") TO_EEP=0; #asm("sei") up=2;}
; 0000 01CB             if(enter>=98){enter=2;LCD_Clear();#asm("cli") TO_EEP=0; #asm("sei") up=2; }
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
	cli
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
	sei
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
; 0000 01CC 
; 0000 01CD             AvtRu=0; // встановлюємо флаг, який буде показувати який був останній режим - Автомат чи Ручний
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0000 01CE             if(podsvet>=1){
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
; 0000 01CF                 sprintf(buff," 1: АВТО    ");
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
; 0000 01D0                 ShowBigLine(0);
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
; 0000 01D1                 MainInfo();
;PCODE: $0000055B VOL: 0
; 0000 01D2 //            if(podsvet==1){LCD_Clear();podsvet=0;}
; 0000 01D3             }
; 0000 01D4             else
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
; 0000 01D5             {
; 0000 01D6                 LCD_Clear();
;PCODE: $0000055E VOL: 0
; 0000 01D7                 sprintf(buff,"$");
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
; 0000 01D8                 ShowBigLine(0);
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
; 0000 01D9                 delay_ms(100);
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
; 0000 01DA                 LCD_init();
;PCODE: $0000056D VOL: 0
; 0000 01DB             }
;PCODE: $0000056E VOL: 0
; 0000 01DC 
; 0000 01DD             if ((U1<U1_MIN)||(U1>U1_MAX)){  //напруга в мережі низька 175В-80% або висока 265
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
; 0000 01DE //добавлена быстрая защита нагрузки!!!
; 0000 01DF                 if(U1>U1_MAX){LINE_REL=1;}   // відключаємо МЕРЕЖУ    для защиты !!!
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
; 0000 01E0                 temp=t1;  // загружаємо затримку переходу на генератор
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
; 0000 01E1                 while (temp!=0)
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
; 0000 01E2                 {
; 0000 01E3                     sprintf(buff,"  HET CETИ! "); ShowBigLine(3);
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
; 0000 01E4                     sprintf(buff,"    %3.uc   ",temp);ShowBigLine(5);
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
; 0000 01E5                     delay_ms(ONE_SECOND);
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
; 0000 01E6                     if(PositionPointer!=1){goto begin;}
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
; 0000 01E7                     temp--;
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
; 0000 01E8                 }
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
; 0000 01E9                 if ((U1<U1_MIN-5)||(U1>U1_MAX+5)){PositionPointer=30; KilkistZapuskiv=KilkistZapuskiv_EEP;};
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
; 0000 01EA                 //напруга все ще за допустимими межами ?,тоді перехід.
; 0000 01EB                 // добавлен гистерезис
; 0000 01EC             }
; 0000 01ED         break;
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
; 0000 01EE     ///////////////////////////////////////////////////////////////////////////////
; 0000 01EF         case 2: //
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
; 0000 01F0             AvtRu=1; // встановлюємо флаг, який буде показувати який був останній режим - Автомат чи Ручний
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
; 0000 01F1             sprintf(buff," 2: РУЧНОЙ ");            ShowBigLine(0);
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
; 0000 01F2             MainInfo();
;PCODE: $000005CA VOL: 0
; 0000 01F3             if (U1>U1_MAX)
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
; 0000 01F4             {
; 0000 01F5                 PositionPointer=42;// перехід на аварію
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
; 0000 01F6                 Klapan_off();
;PCODE: $000005D0 VOL: 0
; 0000 01F7                 LINE_REL=1; // відключаємо МЕРЕЖУ     !!!
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
; 0000 01F8                 LCD_Clear();
;PCODE: $000005D3 VOL: 0
; 0000 01F9             }
; 0000 01FA         break;
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
; 0000 01FB     ///////////////////////////////////////////////////////////////////////////////
; 0000 01FC         case 3: //
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
; 0000 01FD             sprintf(buff," 3: СТОП   ");            ShowBigLine(0);
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
; 0000 01FE             MainInfo();
;PCODE: $000005E4 VOL: 0
; 0000 01FF 
; 0000 0200 /*
; 0000 0201 //            sprintf(buff," t4  =%4.uc",t4); ShowBigLine(3);
; 0000 0202             sprintf(buff,"%4.uB %2.u.%1.uB",U1,U_Bat/10,U_Bat%10);ShowBigLine(3);
; 0000 0203             if (T<0){  sprintf(buff,"  T =-%3.i*C ",-T);}
; 0000 0204                 else{  sprintf(buff,"  T = %3.i*C ",T);};
; 0000 0205             if (T<-25){sprintf(buff,"  T = n/c   ");};  ShowBigLine(5);
; 0000 0206 */
; 0000 0207 
; 0000 0208             if (U1>U1_MAX)
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
; 0000 0209             {
; 0000 020A                 PositionPointer=42;// перехід на аварію
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
; 0000 020B                 Klapan_off();
;PCODE: $000005EA VOL: 0
; 0000 020C                 LINE_REL=1; // відключаємо МЕРЕЖУ     !!!
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
; 0000 020D                 LCD_Clear();
;PCODE: $000005ED VOL: 0
; 0000 020E             }
; 0000 020F         break;
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
; 0000 0210   ///////////////////////////////////////////////////////////////////////////////
; 0000 0211         case 10: // час роботи із заслонкою
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
; 0000 0212             sprintf(buff," НАСТРОЙКИ ");            ShowBigLine(0);
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
; 0000 0213             sprintf(buff,"                      "); ShowLine(5);
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
; 0000 0214             sprintf(buff," t4  =%4.uc ",t4); ShowBigLine(3);
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
; 0000 0215             sprintf(buff,"   ВРЕМЯ ОБОГАЩЕНИЯ   "); ShowLine(INFOLINE1);
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
; 0000 0216 //            sprintf(buff,"         СМЕСИ        "); ShowLine(INFOLINE2);
; 0000 0217             if(((up==1)|(up>KEY_SIG_NUM))&(podmenu==1)){t4++;up=2;}
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
; 0000 0218             if(((down==1)|(down>KEY_SIG_NUM))&(podmenu==1)){t4--;down=2;}
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
; 0000 0219             if(t4>60){t4=60;}
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
; 0000 021A             if(t4<1){t4=1;}
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
; 0000 021B           break;
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
; 0000 021C     ///////////////////////////////////////////////////////////////////////////////
; 0000 021D         case 11: //   t5=t6
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
; 0000 021E             sprintf(buff," t5  =%4.uc ",t5);         ShowBigLine(3);
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
; 0000 021F //            sprintf(buff,"    ВРЕМЯ ПРОГРЕВА    "); ShowLine(INFOLINE1);
; 0000 0220             sprintf(buff," ПРОГРЕВ БЕЗ НАГРУЗКИ "); ShowLine(INFOLINE1);
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
; 0000 0221             if(((up==1)|(up>KEY_SIG_NUM))&(podmenu==1)){t5=t5+5;up=2;}
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
; 0000 0222             if(((down==1)|(down>KEY_SIG_NUM))&(podmenu==1)){t5=t5-5;down=2;}
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
; 0000 0223             if(t5>60){t5=60;}
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
; 0000 0224             if(t5<5){t5=5;}
;PCODE: $000006A4 VOL: 0
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
; 0000 0225         break;
;PCODE: $000006AA VOL: 0
;PCODE: $000006AB VOL: 0
; 0000 0226     ///////////////////////////////////////////////////////////////////////////////
; 0000 0227         case 12: // Мінімальна температура прогріву генератора с заслонкой(накал свечей для дизеля)
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
; 0000 0228             sprintf(buff," Tz  =%3.u*C ",TminZ);      ShowBigLine(3);
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
; 0000 0229 //            sprintf(buff,"   Мaх. ТЕМПЕРАТУРА   "); ShowLine(INFOLINE1);
; 0000 022A //            sprintf(buff,"   ОБОГАЩЕНИЯ СМЕСИ   "); ShowLine(INFOLINE2);
; 0000 022B             sprintf(buff," МИН.ТЕМП.ОБОГАЩЕНИЯ  "); ShowLine(INFOLINE1);
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
; 0000 022C             if(((up==1)|(up>KEY_SIG_NUM))&(podmenu==1)){TminZ=TminZ+5;up=2;}
;PCODE: $000006C8 VOL: 0
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
; 0000 022D             if(((down==1)|(down>KEY_SIG_NUM))&(podmenu==1)){TminZ=TminZ-5;down=2;}
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
; 0000 022E             if(TminZ>90){TminZ=90;}
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
;PCODE: $000006F6 VOL: 0
; 0000 022F             if(TminZ<5){TminZ=5;}
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
; 0000 0230         break;
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
; 0000 0231     ///////////////////////////////////////////////////////////////////////////////
; 0000 0232         case 13: //
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
; 0000 0233             sprintf(buff," Kz  =%4.u ",KilkistZapuskiv); ShowBigLine(3);
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
; 0000 0234 //            sprintf(buff,"  КОЛИЧЕСТВО ПОПЫТОК  "); ShowLine(INFOLINE1);
; 0000 0235 //          sprintf(buff,"  ЗАПУСКА ЭЛ.СТАНЦИИ  "); ShowLine(INFOLINE2);
; 0000 0236             sprintf(buff," КОЛИЧЕСТВО ЗАПУСКОВ  "); ShowLine(INFOLINE1);
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
; 0000 0237             if(((up==1)|(up>KEY_SIG_NUM))&(podmenu==1)){KilkistZapuskiv++;up=2;}
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
;PCODE: $0000072E VOL: 0
; 0000 0238             if(((down==1)|(down>KEY_SIG_NUM))&(podmenu==1)){KilkistZapuskiv--;down=2;}
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
; 0000 0239             if(KilkistZapuskiv>6){KilkistZapuskiv=6;}
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
; 0000 023A             if(KilkistZapuskiv<1){KilkistZapuskiv=1;}
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
; 0000 023B         break;
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
; 0000 023C     ///////////////////////////////////////////////////////////////////////////////
; 0000 023D         case 14: //
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
; 0000 023E             if(z==0){sprintf(buff," <ЗАСЛОНКА> ");}
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
; 0000 023F             else{sprintf(buff," < КЛАПАН > ");}
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
; 0000 0240             ShowBigLine(3);
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
; 0000 0241             sprintf(buff,"     ТИП ПРИВОДА      "); ShowLine(INFOLINE1);
;PCODE: $0000076F VOL: 0
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;PCODE: $00000779 VOL: 0
; 0000 0242 //            sprintf(buff,"      И ИМПУЛЬСА      "); ShowLine(INFOLINE2);
; 0000 0243             if(((up==1)|(up>KEY_SIG_NUM))&(podmenu==1)){z=!z;up=2;}
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
;PCODE: $0000078D VOL: 0
; 0000 0244             if(((down==1)|(down>KEY_SIG_NUM))&(podmenu==1)){z=!z;down=2;}
;PCODE: $0000078E VOL: 0
;PCODE: $0000078F VOL: 0
;PCODE: $00000790 VOL: 0
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
;PCODE: $00000798 VOL: 0
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
; 0000 0245         break;
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
; 0000 0246     ///////////////////////////////////////////////////////////////////////////////
; 0000 0247         case 15: //
;PCODE: $000007A5 VOL: 0
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
; 0000 0248             if(r==0){sprintf(buff," РОТОР(off)");}
;PCODE: $000007A8 VOL: 0
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
;PCODE: $000007B3 VOL: 0
; 0000 0249             else{sprintf(buff," РОТОР(on) ");}
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
;PCODE: $000007BD VOL: 0
;PCODE: $000007BE VOL: 0
;PCODE: $000007BF VOL: 0
; 0000 024A             ShowBigLine(3);
;PCODE: $000007C0 VOL: 0
;PCODE: $000007C1 VOL: 0
; 0000 024B //            sprintf(buff,"       КОНТРОЛЬ       "); ShowLine(INFOLINE1);
; 0000 024C             sprintf(buff,"   СИГНАЛ : 'РОТОР'   "); ShowLine(INFOLINE1);
;PCODE: $000007C2 VOL: 0
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
; 0000 024D             if(((up==1)|(up>KEY_SIG_NUM))&(podmenu==1)){r=!r;up=2;}
;PCODE: $000007CD VOL: 0
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
;PCODE: $000007D3 VOL: 0
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
;PCODE: $000007DF VOL: 0
;PCODE: $000007E0 VOL: 0
; 0000 024E             if(((down==1)|(down>KEY_SIG_NUM))&(podmenu==1)){r=!r;down=2;}
;PCODE: $000007E1 VOL: 0
;PCODE: $000007E2 VOL: 0
;PCODE: $000007E3 VOL: 0
;PCODE: $000007E4 VOL: 0
;PCODE: $000007E5 VOL: 0
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
;PCODE: $000007E9 VOL: 0
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
;PCODE: $000007EF VOL: 0
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
;PCODE: $000007F2 VOL: 0
;PCODE: $000007F3 VOL: 0
;PCODE: $000007F4 VOL: 0
;PCODE: $000007F5 VOL: 0
; 0000 024F         break;
;PCODE: $000007F6 VOL: 0
;PCODE: $000007F7 VOL: 0
; 0000 0250 
; 0000 0251     ///////////////////////////////////////////////////////////////////////////////
; 0000 0252 /*        case 16: //
; 0000 0253             if(TO_EEP==0){sprintf(buff,"  TO  ( 0 )");}
; 0000 0254             else{         sprintf(buff,"  TO  ( 1 )");}
; 0000 0255             ShowBigLine(3);
; 0000 0256 
; 0000 0257 //            sprintf(buff,"       КОНТРОЛЬ       "); ShowLine(INFOLINE1);
; 0000 0258 //            sprintf(buff,"      N:%6.uh       ",NarabotkaEEP/6);
; 0000 0259             sprintf(buff,"СИГНАЛ:'TO'  N:%5.uh ",NarabotkaEEP/6); ShowLine(INFOLINE1);
; 0000 025A //            sprintf(buff,"   СИГНАЛ : ' TO  '   "); ShowLine(INFOLINE1);
; 0000 025B             if(((up==1)|(up>KEY_SIG_NUM))&(podmenu==1)){#asm("cli") TO_EEP=0; #asm("sei") up=2;}
; 0000 025C             if(((down==1)|(down>KEY_SIG_NUM))&(podmenu==1)){#asm("cli") TO_EEP=0; #asm("sei")down=2;}
; 0000 025D         break;
; 0000 025E */
; 0000 025F     ///////////////////////////////////////////////////////////////////////////////
; 0000 0260         case 16: //
;PCODE: $000007F8 VOL: 0
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
; 0000 0261             sprintf(buff," - ВЫХОД - ");            ShowBigLine(3);
;PCODE: $000007FB VOL: 0
;PCODE: $000007FC VOL: 0
;PCODE: $000007FD VOL: 0
;PCODE: $000007FE VOL: 0
;PCODE: $000007FF VOL: 0
;PCODE: $00000800 VOL: 0
;PCODE: $00000801 VOL: 0
;PCODE: $00000802 VOL: 0
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
;PCODE: $00000805 VOL: 0
; 0000 0262 //            sprintf(buff,"      ДЛЯ ВЫХОДА      "); ShowLine(INFOLINE1);
; 0000 0263 //            sprintf(buff,"   УДЕРЖИВАЙ  'ВВОД'  "); ShowLine(INFOLINE2);
; 0000 0264             sprintf(buff,"  ДЛЯ ВЫХОДА >'ВВОД'  "); ShowLine(INFOLINE1);
;PCODE: $00000806 VOL: 0
;PCODE: $00000807 VOL: 0
;PCODE: $00000808 VOL: 0
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
;PCODE: $0000080B VOL: 0
;PCODE: $0000080C VOL: 0
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
;PCODE: $00000810 VOL: 0
; 0000 0265 
; 0000 0266 //            sprintf(buff,"%2.u",enter);
; 0000 0267 //            ShowLine(4);
; 0000 0268 
; 0000 0269         break;
;PCODE: $00000811 VOL: 0
; 0000 026A     ///////////////////////////////////////////////////////////////////////////////
; 0000 026B         case 30: //
;PCODE: $00000812 VOL: 0
;PCODE: $00000813 VOL: 0
;PCODE: $00000814 VOL: 0
; 0000 026C             LCD_Clear();
;PCODE: $00000815 VOL: 0
; 0000 026D             sprintf(buff,"  ЗАПУСК %1.u ",KilkistZapuskiv);           ShowBigLine(0);
;PCODE: $00000816 VOL: 0
;PCODE: $00000817 VOL: 0
;PCODE: $00000818 VOL: 0
;PCODE: $00000819 VOL: 0
;PCODE: $0000081A VOL: 0
;PCODE: $0000081B VOL: 0
;PCODE: $0000081C VOL: 0
;PCODE: $0000081D VOL: 0
;PCODE: $0000081E VOL: 0
;PCODE: $0000081F VOL: 0
;PCODE: $00000820 VOL: 0
;PCODE: $00000821 VOL: 0
;PCODE: $00000822 VOL: 0
;PCODE: $00000823 VOL: 0
; 0000 026E             delay_ms(ONE_SECOND);
;PCODE: $00000824 VOL: 0
;PCODE: $00000825 VOL: 0
; 0000 026F             sprintf(buff," ЗАЖИГАНИЕ  ");           ShowBigLine(3);
;PCODE: $00000826 VOL: 0
;PCODE: $00000827 VOL: 0
;PCODE: $00000828 VOL: 0
;PCODE: $00000829 VOL: 0
;PCODE: $0000082A VOL: 0
;PCODE: $0000082B VOL: 0
;PCODE: $0000082C VOL: 0
;PCODE: $0000082D VOL: 0
;PCODE: $0000082E VOL: 0
;PCODE: $0000082F VOL: 0
;PCODE: $00000830 VOL: 0
; 0000 0270             ON_REL=1;      //вмикаємо запалення OUT7
;PCODE: $00000831 VOL: 0
;PCODE: $00000832 VOL: 0
; 0000 0271             if(T<TminZ){
;PCODE: $00000833 VOL: 0
;PCODE: $00000834 VOL: 0
;PCODE: $00000835 VOL: 0
;PCODE: $00000836 VOL: 0
;PCODE: $00000837 VOL: 0
; 0000 0272                 VALVE_U_REL=1;
;PCODE: $00000838 VOL: 0
;PCODE: $00000839 VOL: 0
; 0000 0273                 delay_ms(ONE_SECOND);
;PCODE: $0000083A VOL: 0
;PCODE: $0000083B VOL: 0
; 0000 0274                 if(z==0)
;PCODE: $0000083C VOL: 0
;PCODE: $0000083D VOL: 0
;PCODE: $0000083E VOL: 0
; 0000 0275                 {
; 0000 0276                     sprintf(buff," ЗАСЛОНКА-> "); ShowBigLine(3);
;PCODE: $0000083F VOL: 0
;PCODE: $00000840 VOL: 0
;PCODE: $00000841 VOL: 0
;PCODE: $00000842 VOL: 0
;PCODE: $00000843 VOL: 0
;PCODE: $00000844 VOL: 0
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
;PCODE: $00000847 VOL: 0
;PCODE: $00000848 VOL: 0
;PCODE: $00000849 VOL: 0
; 0000 0277                     VALVE_U_REL=0;//відключаємо імпульс закритої заслонки
;PCODE: $0000084A VOL: 0
;PCODE: $0000084B VOL: 0
; 0000 0278                 }
; 0000 0279                 else
;PCODE: $0000084C VOL: 0
;PCODE: $0000084D VOL: 0
; 0000 027A                 {
; 0000 027B                     sprintf(buff," КЛАПАН ->  "); ShowBigLine(3);
;PCODE: $0000084E VOL: 0
;PCODE: $0000084F VOL: 0
;PCODE: $00000850 VOL: 0
;PCODE: $00000851 VOL: 0
;PCODE: $00000852 VOL: 0
;PCODE: $00000853 VOL: 0
;PCODE: $00000854 VOL: 0
;PCODE: $00000855 VOL: 0
;PCODE: $00000856 VOL: 0
;PCODE: $00000857 VOL: 0
;PCODE: $00000858 VOL: 0
; 0000 027C                 }
;PCODE: $00000859 VOL: 0
; 0000 027D                 delay_ms(ONE_SECOND);
;PCODE: $0000085A VOL: 0
;PCODE: $0000085B VOL: 0
; 0000 027E             };
;PCODE: $0000085C VOL: 0
; 0000 027F             ///////////////////////////////////
; 0000 0280 ////////
; 0000 0281             // !!!!добавить проверку выходного напряжения
; 0000 0282             if(rotor<3){STARTER_REL=1;};// запускаємо стартер ,якщо ротор не  працює v1.4)
;PCODE: $0000085D VOL: 0
;PCODE: $0000085E VOL: 0
;PCODE: $0000085F VOL: 0
;PCODE: $00000860 VOL: 0
;PCODE: $00000861 VOL: 0
;PCODE: $00000862 VOL: 0
; 0000 0283             // !!!!добавить проверку выходного напряжения
; 0000 0284             temp=t3;
;PCODE: $00000863 VOL: 0
;PCODE: $00000864 VOL: 0
;PCODE: $00000865 VOL: 0
; 0000 0285             while (temp!=0)
;PCODE: $00000866 VOL: 0
;PCODE: $00000867 VOL: 0
;PCODE: $00000868 VOL: 0
;PCODE: $00000869 VOL: 0
; 0000 0286             {
; 0000 0287                 sprintf(buff," СТАРТЕР:%1.uc ",temp); ShowBigLine(3);
;PCODE: $0000086A VOL: 0
;PCODE: $0000086B VOL: 0
;PCODE: $0000086C VOL: 0
;PCODE: $0000086D VOL: 0
;PCODE: $0000086E VOL: 0
;PCODE: $0000086F VOL: 0
;PCODE: $00000870 VOL: 0
;PCODE: $00000871 VOL: 0
;PCODE: $00000872 VOL: 0
;PCODE: $00000873 VOL: 0
;PCODE: $00000874 VOL: 0
;PCODE: $00000875 VOL: 0
;PCODE: $00000876 VOL: 0
;PCODE: $00000877 VOL: 0
; 0000 0288                 delay_ms(ONE_SECOND);
;PCODE: $00000878 VOL: 0
;PCODE: $00000879 VOL: 0
; 0000 0289                 temp--;
;PCODE: $0000087A VOL: 0
;PCODE: $0000087B VOL: 0
;PCODE: $0000087C VOL: 0
;PCODE: $0000087D VOL: 0
; 0000 028A                 if(rotor>7){temp=0;};// еесли двигатель запустился- переходим к засллонке
;PCODE: $0000087E VOL: 0
;PCODE: $0000087F VOL: 0
;PCODE: $00000880 VOL: 0
;PCODE: $00000881 VOL: 0
;PCODE: $00000882 VOL: 0
;PCODE: $00000883 VOL: 0
; 0000 028B             };
;PCODE: $00000884 VOL: 0
;PCODE: $00000885 VOL: 0
; 0000 028C             STARTER_REL=0;                           //відключаємо стартер OUT6 на (1-6c)
;PCODE: $00000886 VOL: 0
;PCODE: $00000887 VOL: 0
; 0000 028D             ///////////////////////////////////
; 0000 028E             temp=t4;                             // прогріваємо генератор із заслонкою (5-30с)
;PCODE: $00000888 VOL: 0
;PCODE: $00000889 VOL: 0
;PCODE: $0000088A VOL: 0
; 0000 028F             if(T<TminZ){
;PCODE: $0000088B VOL: 0
;PCODE: $0000088C VOL: 0
;PCODE: $0000088D VOL: 0
;PCODE: $0000088E VOL: 0
;PCODE: $0000088F VOL: 0
; 0000 0290                 while (temp!=0)
;PCODE: $00000890 VOL: 0
;PCODE: $00000891 VOL: 0
;PCODE: $00000892 VOL: 0
;PCODE: $00000893 VOL: 0
; 0000 0291                 {
; 0000 0292                     sprintf(buff,"ПРОГРЕВ:%2.uc ",temp); ShowBigLine(3);
;PCODE: $00000894 VOL: 0
;PCODE: $00000895 VOL: 0
;PCODE: $00000896 VOL: 0
;PCODE: $00000897 VOL: 0
;PCODE: $00000898 VOL: 0
;PCODE: $00000899 VOL: 0
;PCODE: $0000089A VOL: 0
;PCODE: $0000089B VOL: 0
;PCODE: $0000089C VOL: 0
;PCODE: $0000089D VOL: 0
;PCODE: $0000089E VOL: 0
;PCODE: $0000089F VOL: 0
;PCODE: $000008A0 VOL: 0
;PCODE: $000008A1 VOL: 0
; 0000 0293                     delay_ms(ONE_SECOND);
;PCODE: $000008A2 VOL: 0
;PCODE: $000008A3 VOL: 0
; 0000 0294                     temp--;
;PCODE: $000008A4 VOL: 0
;PCODE: $000008A5 VOL: 0
;PCODE: $000008A6 VOL: 0
;PCODE: $000008A7 VOL: 0
; 0000 0295     //                if(T>TminZ){temp=0;}     //якщо температура высока - зупиняемо прогрів
; 0000 0296                 };
;PCODE: $000008A8 VOL: 0
;PCODE: $000008A9 VOL: 0
; 0000 0297                 ///////////////////////////////////
; 0000 0298                 VALVE_U_REL=0; //відключаємо імпульс закритої заслонки АБО КЛАПАНА
;PCODE: $000008AA VOL: 0
;PCODE: $000008AB VOL: 0
; 0000 0299                 if(z==0)
;PCODE: $000008AC VOL: 0
;PCODE: $000008AD VOL: 0
;PCODE: $000008AE VOL: 0
; 0000 029A                 {
; 0000 029B                     sprintf(buff," ЗАСЛОНКА < "); ShowBigLine(3);
;PCODE: $000008AF VOL: 0
;PCODE: $000008B0 VOL: 0
;PCODE: $000008B1 VOL: 0
;PCODE: $000008B2 VOL: 0
;PCODE: $000008B3 VOL: 0
;PCODE: $000008B4 VOL: 0
;PCODE: $000008B5 VOL: 0
;PCODE: $000008B6 VOL: 0
;PCODE: $000008B7 VOL: 0
;PCODE: $000008B8 VOL: 0
;PCODE: $000008B9 VOL: 0
; 0000 029C                     delay_ms(HALF_SECOND);                           //пауза чтоб не подать встречное напряжение
;PCODE: $000008BA VOL: 0
;PCODE: $000008BB VOL: 0
; 0000 029D                     VALVE_D_REL=1; //відкріваємо заслонку OUT4  Реверсивный импульс!!!
;PCODE: $000008BC VOL: 0
;PCODE: $000008BD VOL: 0
; 0000 029E                 }
; 0000 029F                 else
;PCODE: $000008BE VOL: 0
;PCODE: $000008BF VOL: 0
; 0000 02A0                 {
; 0000 02A1                     sprintf(buff," КЛАПАН <-  "); ShowBigLine(3);
;PCODE: $000008C0 VOL: 0
;PCODE: $000008C1 VOL: 0
;PCODE: $000008C2 VOL: 0
;PCODE: $000008C3 VOL: 0
;PCODE: $000008C4 VOL: 0
;PCODE: $000008C5 VOL: 0
;PCODE: $000008C6 VOL: 0
;PCODE: $000008C7 VOL: 0
;PCODE: $000008C8 VOL: 0
;PCODE: $000008C9 VOL: 0
;PCODE: $000008CA VOL: 0
; 0000 02A2                     delay_ms(ONE_SECOND);
;PCODE: $000008CB VOL: 0
;PCODE: $000008CC VOL: 0
; 0000 02A3                 }
;PCODE: $000008CD VOL: 0
; 0000 02A4                 delay_ms(ONE_SECOND);
;PCODE: $000008CE VOL: 0
;PCODE: $000008CF VOL: 0
; 0000 02A5             }
; 0000 02A6             VALVE_D_REL=0; //відключаємо  реверсивний імпульс для заслонки и КЛАПАНА (на всякий случай)
;PCODE: $000008D0 VOL: 0
;PCODE: $000008D1 VOL: 0
;PCODE: $000008D2 VOL: 0
; 0000 02A7             ///////////////////////////////////
; 0000 02A8 
; 0000 02A9 //!!! /// добавить проверку (может уже завелся?)
; 0000 02AA             temp=RAZGON;
;PCODE: $000008D3 VOL: 0
;PCODE: $000008D4 VOL: 0
; 0000 02AB             while (temp!=0){
;PCODE: $000008D5 VOL: 0
;PCODE: $000008D6 VOL: 0
;PCODE: $000008D7 VOL: 0
;PCODE: $000008D8 VOL: 0
; 0000 02AC                    sprintf(buff," РАЗГОН:%2.uc ",temp); ShowBigLine(3);
;PCODE: $000008D9 VOL: 0
;PCODE: $000008DA VOL: 0
;PCODE: $000008DB VOL: 0
;PCODE: $000008DC VOL: 0
;PCODE: $000008DD VOL: 0
;PCODE: $000008DE VOL: 0
;PCODE: $000008DF VOL: 0
;PCODE: $000008E0 VOL: 0
;PCODE: $000008E1 VOL: 0
;PCODE: $000008E2 VOL: 0
;PCODE: $000008E3 VOL: 0
;PCODE: $000008E4 VOL: 0
;PCODE: $000008E5 VOL: 0
;PCODE: $000008E6 VOL: 0
; 0000 02AD                    delay_ms(ONE_SECOND);
;PCODE: $000008E7 VOL: 0
;PCODE: $000008E8 VOL: 0
; 0000 02AE                    temp--;
;PCODE: $000008E9 VOL: 0
;PCODE: $000008EA VOL: 0
;PCODE: $000008EB VOL: 0
;PCODE: $000008EC VOL: 0
; 0000 02AF                  };
;PCODE: $000008ED VOL: 0
;PCODE: $000008EE VOL: 0
; 0000 02B0             ///////////////////////////////////
; 0000 02B1             if(KilkistZapuskiv>0){KilkistZapuskiv--;};
;PCODE: $000008EF VOL: 0
;PCODE: $000008F0 VOL: 0
;PCODE: $000008F1 VOL: 0
;PCODE: $000008F2 VOL: 0
;PCODE: $000008F3 VOL: 0
;PCODE: $000008F4 VOL: 0
;PCODE: $000008F5 VOL: 0
; 0000 02B2             PositionPointer=31; // Переход на проверку и прогрев
;PCODE: $000008F6 VOL: 0
;PCODE: $000008F7 VOL: 0
; 0000 02B3        break;
;PCODE: $000008F8 VOL: 0
; 0000 02B4     ///////////////////////////////////////////////////////////////////////////////
; 0000 02B5        case 31: // ПЕРЕВІРКА РОБОТИ ГЕНЕРАТОРА ,ПРОГРІВ
;PCODE: $000008F9 VOL: 0
;PCODE: $000008FA VOL: 0
;PCODE: $000008FB VOL: 0
; 0000 02B6             LCD_Clear();
;PCODE: $000008FC VOL: 0
; 0000 02B7             if(rotor<3){//ротор зупинився (генератор заглох)
;PCODE: $000008FD VOL: 0
;PCODE: $000008FE VOL: 0
;PCODE: $000008FF VOL: 0
; 0000 02B8                 ON_REL=0;              //вимикаємо запалення
;PCODE: $00000900 VOL: 0
;PCODE: $00000901 VOL: 0
; 0000 02B9                 if(KilkistZapuskiv>0){
;PCODE: $00000902 VOL: 0
;PCODE: $00000903 VOL: 0
;PCODE: $00000904 VOL: 0
; 0000 02BA                     sprintf(buff," ПОВТОРНЫЙ  "); ShowBigLine(3);
;PCODE: $00000905 VOL: 0
;PCODE: $00000906 VOL: 0
;PCODE: $00000907 VOL: 0
;PCODE: $00000908 VOL: 0
;PCODE: $00000909 VOL: 0
;PCODE: $0000090A VOL: 0
;PCODE: $0000090B VOL: 0
;PCODE: $0000090C VOL: 0
;PCODE: $0000090D VOL: 0
;PCODE: $0000090E VOL: 0
;PCODE: $0000090F VOL: 0
; 0000 02BB                     sprintf(buff,"   ЗАПУСК   "); ShowBigLine(5);
;PCODE: $00000910 VOL: 0
;PCODE: $00000911 VOL: 0
;PCODE: $00000912 VOL: 0
;PCODE: $00000913 VOL: 0
;PCODE: $00000914 VOL: 0
;PCODE: $00000915 VOL: 0
;PCODE: $00000916 VOL: 0
;PCODE: $00000917 VOL: 0
;PCODE: $00000918 VOL: 0
;PCODE: $00000919 VOL: 0
;PCODE: $0000091A VOL: 0
; 0000 02BC                     delay_ms(NEXT_ZAPUSK_SECOND);
;PCODE: $0000091B VOL: 0
;PCODE: $0000091C VOL: 0
; 0000 02BD                       if(KilkistZapuskiv==1){delay_ms(NEXT_ZAPUSK_SECOND);};//якщо остання попитка - то акумулятор відпо ...
;PCODE: $0000091D VOL: 0
;PCODE: $0000091E VOL: 0
;PCODE: $0000091F VOL: 0
;PCODE: $00000920 VOL: 0
;PCODE: $00000921 VOL: 0
;PCODE: $00000922 VOL: 0
; 0000 02BE                       PositionPointer=30;
;PCODE: $00000923 VOL: 0
;PCODE: $00000924 VOL: 0
; 0000 02BF                 }
; 0000 02C0                 else  //кількість запусків вичерпана
;PCODE: $00000925 VOL: 0
;PCODE: $00000926 VOL: 0
; 0000 02C1                 {
; 0000 02C2                     PositionPointer=40;     //переходимо на аварію "генератор не запустився"
;PCODE: $00000927 VOL: 0
;PCODE: $00000928 VOL: 0
; 0000 02C3                     Klapan_off();
;PCODE: $00000929 VOL: 0
; 0000 02C4                     goto begin;
;PCODE: $0000092A VOL: 0
; 0000 02C5                 };
;PCODE: $0000092B VOL: 0
; 0000 02C6             }
; 0000 02C7             else //Генератор запустився, чекаємо підключення нагрузки
;PCODE: $0000092C VOL: 0
;PCODE: $0000092D VOL: 0
; 0000 02C8             {
; 0000 02C9                 if(T<TminN){
;PCODE: $0000092E VOL: 0
;PCODE: $0000092F VOL: 0
;PCODE: $00000930 VOL: 0
;PCODE: $00000931 VOL: 0
;PCODE: $00000932 VOL: 0
; 0000 02CA                         temp=t5;     // Мінімальний час до підключення нагрузки
;PCODE: $00000933 VOL: 0
;PCODE: $00000934 VOL: 0
;PCODE: $00000935 VOL: 0
; 0000 02CB                         while (temp!=0)
;PCODE: $00000936 VOL: 0
;PCODE: $00000937 VOL: 0
;PCODE: $00000938 VOL: 0
;PCODE: $00000939 VOL: 0
; 0000 02CC                         { //якщо генератор запустився , то чекаємо (Мінімальний час до підключення нагрузки)
; 0000 02CD                             sprintf(buff,"ПРОГРЕВ:%2.uc ",temp); ShowBigLine(3);
;PCODE: $0000093A VOL: 0
;PCODE: $0000093B VOL: 0
;PCODE: $0000093C VOL: 0
;PCODE: $0000093D VOL: 0
;PCODE: $0000093E VOL: 0
;PCODE: $0000093F VOL: 0
;PCODE: $00000940 VOL: 0
;PCODE: $00000941 VOL: 0
;PCODE: $00000942 VOL: 0
;PCODE: $00000943 VOL: 0
;PCODE: $00000944 VOL: 0
;PCODE: $00000945 VOL: 0
;PCODE: $00000946 VOL: 0
;PCODE: $00000947 VOL: 0
; 0000 02CE                             delay_ms(ONE_SECOND);
;PCODE: $00000948 VOL: 0
;PCODE: $00000949 VOL: 0
; 0000 02CF                             temp--;
;PCODE: $0000094A VOL: 0
;PCODE: $0000094B VOL: 0
;PCODE: $0000094C VOL: 0
;PCODE: $0000094D VOL: 0
; 0000 02D0                         };
;PCODE: $0000094E VOL: 0
;PCODE: $0000094F VOL: 0
; 0000 02D1                  };
;PCODE: $00000950 VOL: 0
; 0000 02D2                  //ТУТ!!! Можна підключити генератор  (температура нормальна, або час витримано)
; 0000 02D3                  //але лише якщо вхідний автомат влючений, та генератор видае напругу
; 0000 02D4                 ///////////////////////////////////
; 0000 02D5                  if(GEN_OUT_PIN==1){ //на виході генератора немає напруги?  (лінія інверсна: 0 - напруга Є)
;PCODE: $00000951 VOL: 0
;PCODE: $00000952 VOL: 0
;PCODE: $00000953 VOL: 0
; 0000 02D6                         ON_REL=0;              //вимикаємо запалення
;PCODE: $00000954 VOL: 0
;PCODE: $00000955 VOL: 0
; 0000 02D7                         PositionPointer=41;     //переходимо на аварію "генератор не видае напруги"
;PCODE: $00000956 VOL: 0
;PCODE: $00000957 VOL: 0
; 0000 02D8                         Klapan_off();
;PCODE: $00000958 VOL: 0
; 0000 02D9                         enter=2;
;PCODE: $00000959 VOL: 0
;PCODE: $0000095A VOL: 0
; 0000 02DA                         goto begin;
;PCODE: $0000095B VOL: 0
; 0000 02DB                  };
;PCODE: $0000095C VOL: 0
; 0000 02DC                  PerehodNaGenerator();  //підключення нагрузки на генератор
;PCODE: $0000095D VOL: 0
; 0000 02DD                  PositionPointer=32; // Робочий режим
;PCODE: $0000095E VOL: 0
;PCODE: $0000095F VOL: 0
; 0000 02DE //                 TimeSec=podsvet; PORTD.7=1; //вмикаємо підсвічування ЖКІ та переходимо до РОБОТИ
; 0000 02DF             };
;PCODE: $00000960 VOL: 0
; 0000 02E0        break;
;PCODE: $00000961 VOL: 0
; 0000 02E1     ///////////////////////////////////////////////////////////////////////////////
; 0000 02E2         case 32:  // РОБОТА (РУЧНА або АВТОМАТИЧНА)
;PCODE: $00000962 VOL: 0
;PCODE: $00000963 VOL: 0
;PCODE: $00000964 VOL: 0
; 0000 02E3             sprintf(buff,"  РАБОТА   ");            ShowBigLine(0);
;PCODE: $00000965 VOL: 0
;PCODE: $00000966 VOL: 0
;PCODE: $00000967 VOL: 0
;PCODE: $00000968 VOL: 0
;PCODE: $00000969 VOL: 0
;PCODE: $0000096A VOL: 0
;PCODE: $0000096B VOL: 0
;PCODE: $0000096C VOL: 0
;PCODE: $0000096D VOL: 0
;PCODE: $0000096E VOL: 0
;PCODE: $0000096F VOL: 0
; 0000 02E4             MainInfo();
;PCODE: $00000970 VOL: 0
; 0000 02E5 
; 0000 02E6             if(AvtRu==0)//якщо робота АВТОМАТИЧНА то потрібен контроль появи струму!!
;PCODE: $00000971 VOL: 0
;PCODE: $00000972 VOL: 0
;PCODE: $00000973 VOL: 0
; 0000 02E7             {
; 0000 02E8 //!!!ПОМЕНЯТЬ
; 0000 02E9                 if((U1>150)&&(U1<250))
;PCODE: $00000974 VOL: 0
;PCODE: $00000975 VOL: 0
;PCODE: $00000976 VOL: 0
;PCODE: $00000977 VOL: 0
;PCODE: $00000978 VOL: 0
;PCODE: $00000979 VOL: 0
;PCODE: $0000097A VOL: 0
;PCODE: $0000097B VOL: 0
;PCODE: $0000097C VOL: 0
;PCODE: $0000097D VOL: 0
; 0000 02EA                 {   //напруга в мережі з'явилась?
; 0000 02EB                     ///////////////////////////////////
; 0000 02EC                     temp=t2;        // загружаємо затримку переходу на основну мережу
;PCODE: $0000097E VOL: 0
;PCODE: $0000097F VOL: 0
;PCODE: $00000980 VOL: 0
; 0000 02ED                     while (temp!=0) // ждем, вдруг сеть пропадет снова?
;PCODE: $00000981 VOL: 0
;PCODE: $00000982 VOL: 0
;PCODE: $00000983 VOL: 0
;PCODE: $00000984 VOL: 0
; 0000 02EE                     {
; 0000 02EF                         sprintf(buff," СЕТЬ НОРМА "); ShowBigLine(3);
;PCODE: $00000985 VOL: 0
;PCODE: $00000986 VOL: 0
;PCODE: $00000987 VOL: 0
;PCODE: $00000988 VOL: 0
;PCODE: $00000989 VOL: 0
;PCODE: $0000098A VOL: 0
;PCODE: $0000098B VOL: 0
;PCODE: $0000098C VOL: 0
;PCODE: $0000098D VOL: 0
;PCODE: $0000098E VOL: 0
;PCODE: $0000098F VOL: 0
; 0000 02F0                         sprintf(buff,"    %3.uc   ",temp);ShowBigLine(5);
;PCODE: $00000990 VOL: 0
;PCODE: $00000991 VOL: 0
;PCODE: $00000992 VOL: 0
;PCODE: $00000993 VOL: 0
;PCODE: $00000994 VOL: 0
;PCODE: $00000995 VOL: 0
;PCODE: $00000996 VOL: 0
;PCODE: $00000997 VOL: 0
;PCODE: $00000998 VOL: 0
;PCODE: $00000999 VOL: 0
;PCODE: $0000099A VOL: 0
;PCODE: $0000099B VOL: 0
;PCODE: $0000099C VOL: 0
;PCODE: $0000099D VOL: 0
; 0000 02F1                         delay_ms(ONE_SECOND);
;PCODE: $0000099E VOL: 0
;PCODE: $0000099F VOL: 0
; 0000 02F2                         temp--;
;PCODE: $000009A0 VOL: 0
;PCODE: $000009A1 VOL: 0
;PCODE: $000009A2 VOL: 0
;PCODE: $000009A3 VOL: 0
; 0000 02F3                     }
;PCODE: $000009A4 VOL: 0
;PCODE: $000009A5 VOL: 0
; 0000 02F4 //!!!ПОМЕНЯТЬ
; 0000 02F5 /*2.2*/             if ((U1>140)&&(U1<255)){PositionPointer=33;enter=2;goto begin;}  //напруга все ще є?,тоді перехід.
;PCODE: $000009A6 VOL: 0
;PCODE: $000009A7 VOL: 0
;PCODE: $000009A8 VOL: 0
;PCODE: $000009A9 VOL: 0
;PCODE: $000009AA VOL: 0
;PCODE: $000009AB VOL: 0
;PCODE: $000009AC VOL: 0
;PCODE: $000009AD VOL: 0
;PCODE: $000009AE VOL: 0
;PCODE: $000009AF VOL: 0
;PCODE: $000009B0 VOL: 0
;PCODE: $000009B1 VOL: 0
;PCODE: $000009B2 VOL: 0
;PCODE: $000009B3 VOL: 0
;PCODE: $000009B4 VOL: 0
; 0000 02F6                 }
;PCODE: $000009B5 VOL: 0
; 0000 02F7             }
;PCODE: $000009B6 VOL: 0
; 0000 02F8             else // ручная работа- тогда останов кнопкой!
;PCODE: $000009B7 VOL: 0
;PCODE: $000009B8 VOL: 0
; 0000 02F9             {
; 0000 02FA                 if(enter>GO_TO_OPTIONS){PositionPointer=33;enter=2;};
;PCODE: $000009B9 VOL: 0
;PCODE: $000009BA VOL: 0
;PCODE: $000009BB VOL: 0
;PCODE: $000009BC VOL: 0
;PCODE: $000009BD VOL: 0
;PCODE: $000009BE VOL: 0
;PCODE: $000009BF VOL: 0
;PCODE: $000009C0 VOL: 0
; 0000 02FB             }
;PCODE: $000009C1 VOL: 0
; 0000 02FC 
; 0000 02FD             if(GEN_OUT_PIN==1){ //на виході генератора зникла напруга?  (лінія інверсна: 0 - напруга Є)
;PCODE: $000009C2 VOL: 0
;PCODE: $000009C3 VOL: 0
;PCODE: $000009C4 VOL: 0
; 0000 02FE                     PerehodNaMereju();
;PCODE: $000009C5 VOL: 0
; 0000 02FF                     ON_REL=0;              //вимикаємо запалення
;PCODE: $000009C6 VOL: 0
;PCODE: $000009C7 VOL: 0
; 0000 0300                     PositionPointer=41;     //переходимо на аварію "генератор не видае напруги"
;PCODE: $000009C8 VOL: 0
;PCODE: $000009C9 VOL: 0
; 0000 0301                     Klapan_off();
;PCODE: $000009CA VOL: 0
; 0000 0302                     enter=2;
;PCODE: $000009CB VOL: 0
;PCODE: $000009CC VOL: 0
; 0000 0303                     LCD_Clear();
;PCODE: $000009CD VOL: 0
; 0000 0304             };
;PCODE: $000009CE VOL: 0
; 0000 0305         break;
;PCODE: $000009CF VOL: 0
; 0000 0306     ///////////////////////////////////////////////////////////////////////////////
; 0000 0307         case 33:  // ОСТАНОВ С ОХЛАЖДЕНИЕМ
;PCODE: $000009D0 VOL: 0
;PCODE: $000009D1 VOL: 0
;PCODE: $000009D2 VOL: 0
; 0000 0308             sprintf(buff,"  ОСТАНОВ  ");            ShowBigLine(0);
;PCODE: $000009D3 VOL: 0
;PCODE: $000009D4 VOL: 0
;PCODE: $000009D5 VOL: 0
;PCODE: $000009D6 VOL: 0
;PCODE: $000009D7 VOL: 0
;PCODE: $000009D8 VOL: 0
;PCODE: $000009D9 VOL: 0
;PCODE: $000009DA VOL: 0
;PCODE: $000009DB VOL: 0
;PCODE: $000009DC VOL: 0
;PCODE: $000009DD VOL: 0
; 0000 0309             PerehodNaMereju();
;PCODE: $000009DE VOL: 0
; 0000 030A             delay_ms(ONE_SECOND);
;PCODE: $000009DF VOL: 0
;PCODE: $000009E0 VOL: 0
; 0000 030B             ///////////////////////////////////
; 0000 030C             temp=t5;    //загружаємо час охолодження
;PCODE: $000009E1 VOL: 0
;PCODE: $000009E2 VOL: 0
;PCODE: $000009E3 VOL: 0
; 0000 030D             while (temp!=0) // ждем, вдруг сеть пропадет снова?
;PCODE: $000009E4 VOL: 0
;PCODE: $000009E5 VOL: 0
;PCODE: $000009E6 VOL: 0
;PCODE: $000009E7 VOL: 0
; 0000 030E             {
; 0000 030F                 sprintf(buff," ОХЛАЖДЕНИЕ "); ShowBigLine(3);
;PCODE: $000009E8 VOL: 0
;PCODE: $000009E9 VOL: 0
;PCODE: $000009EA VOL: 0
;PCODE: $000009EB VOL: 0
;PCODE: $000009EC VOL: 0
;PCODE: $000009ED VOL: 0
;PCODE: $000009EE VOL: 0
;PCODE: $000009EF VOL: 0
;PCODE: $000009F0 VOL: 0
;PCODE: $000009F1 VOL: 0
;PCODE: $000009F2 VOL: 0
; 0000 0310                 sprintf(buff,"    %3.uc   ",temp);ShowBigLine(5);
;PCODE: $000009F3 VOL: 0
;PCODE: $000009F4 VOL: 0
;PCODE: $000009F5 VOL: 0
;PCODE: $000009F6 VOL: 0
;PCODE: $000009F7 VOL: 0
;PCODE: $000009F8 VOL: 0
;PCODE: $000009F9 VOL: 0
;PCODE: $000009FA VOL: 0
;PCODE: $000009FB VOL: 0
;PCODE: $000009FC VOL: 0
;PCODE: $000009FD VOL: 0
;PCODE: $000009FE VOL: 0
;PCODE: $000009FF VOL: 0
;PCODE: $00000A00 VOL: 0
; 0000 0311                 delay_ms(ONE_SECOND);
;PCODE: $00000A01 VOL: 0
;PCODE: $00000A02 VOL: 0
; 0000 0312                 temp--;
;PCODE: $00000A03 VOL: 0
;PCODE: $00000A04 VOL: 0
;PCODE: $00000A05 VOL: 0
;PCODE: $00000A06 VOL: 0
; 0000 0313                 if(AvtRu==0)
;PCODE: $00000A07 VOL: 0
;PCODE: $00000A08 VOL: 0
;PCODE: $00000A09 VOL: 0
; 0000 0314                 { //якщо робота АВТОМАТИЧНА то потрібен контроль ЗНИКНЕННЯ струму!!
; 0000 0315                     if ((U1<140)||(U1>265))
;PCODE: $00000A0A VOL: 0
;PCODE: $00000A0B VOL: 0
;PCODE: $00000A0C VOL: 0
;PCODE: $00000A0D VOL: 0
;PCODE: $00000A0E VOL: 0
;PCODE: $00000A0F VOL: 0
;PCODE: $00000A10 VOL: 0
;PCODE: $00000A11 VOL: 0
; 0000 0316                     {  //напруга в мережі знову зникла
; 0000 0317                         sprintf(buff,"  HET CETИ! "); ShowBigLine(3);
;PCODE: $00000A12 VOL: 0
;PCODE: $00000A13 VOL: 0
;PCODE: $00000A14 VOL: 0
;PCODE: $00000A15 VOL: 0
;PCODE: $00000A16 VOL: 0
;PCODE: $00000A17 VOL: 0
;PCODE: $00000A18 VOL: 0
;PCODE: $00000A19 VOL: 0
;PCODE: $00000A1A VOL: 0
;PCODE: $00000A1B VOL: 0
;PCODE: $00000A1C VOL: 0
; 0000 0318                         sprintf(buff,"    %3.uc   ",temp);ShowBigLine(5);
;PCODE: $00000A1D VOL: 0
;PCODE: $00000A1E VOL: 0
;PCODE: $00000A1F VOL: 0
;PCODE: $00000A20 VOL: 0
;PCODE: $00000A21 VOL: 0
;PCODE: $00000A22 VOL: 0
;PCODE: $00000A23 VOL: 0
;PCODE: $00000A24 VOL: 0
;PCODE: $00000A25 VOL: 0
;PCODE: $00000A26 VOL: 0
;PCODE: $00000A27 VOL: 0
;PCODE: $00000A28 VOL: 0
;PCODE: $00000A29 VOL: 0
;PCODE: $00000A2A VOL: 0
; 0000 0319                         delay_ms(ONE_SECOND);
;PCODE: $00000A2B VOL: 0
;PCODE: $00000A2C VOL: 0
; 0000 031A                         PerehodNaGenerator();  //підключення нагрузки на генератор
;PCODE: $00000A2D VOL: 0
; 0000 031B                         PositionPointer=32; // перехід у "Робочий режим"
;PCODE: $00000A2E VOL: 0
;PCODE: $00000A2F VOL: 0
; 0000 031C                         enter=2; goto begin;
;PCODE: $00000A30 VOL: 0
;PCODE: $00000A31 VOL: 0
;PCODE: $00000A32 VOL: 0
; 0000 031D                     }
; 0000 031E                 }
;PCODE: $00000A33 VOL: 0
; 0000 031F             }
;PCODE: $00000A34 VOL: 0
;PCODE: $00000A35 VOL: 0
;PCODE: $00000A36 VOL: 0
; 0000 0320            //////////////////////////////////
; 0000 0321             Klapan_off();
;PCODE: $00000A37 VOL: 0
; 0000 0322             //////////////////////////////////
; 0000 0323             if(AvtRu==0) //для автоматичного режиму - повернення у режим АВТОМАТ  иначе в ИНФО
;PCODE: $00000A38 VOL: 0
;PCODE: $00000A39 VOL: 0
;PCODE: $00000A3A VOL: 0
; 0000 0324             {
; 0000 0325                 PositionPointer=1;
;PCODE: $00000A3B VOL: 0
;PCODE: $00000A3C VOL: 0
; 0000 0326             }
; 0000 0327             else
;PCODE: $00000A3D VOL: 0
;PCODE: $00000A3E VOL: 0
; 0000 0328             {
; 0000 0329                 PositionPointer=3;
;PCODE: $00000A3F VOL: 0
;PCODE: $00000A40 VOL: 0
; 0000 032A             }
;PCODE: $00000A41 VOL: 0
; 0000 032B             ON_REL=0;//вимикаємо запалення
;PCODE: $00000A42 VOL: 0
;PCODE: $00000A43 VOL: 0
; 0000 032C             goto begin;
;PCODE: $00000A44 VOL: 0
; 0000 032D         break;
;PCODE: $00000A45 VOL: 0
; 0000 032E     ///////////////////////////////////////////////////////////////////////////////
; 0000 032F 
; 0000 0330         case 40: // АВАРИЯ ГЕНЕРАТОР НЕ ЗАПУСТИЛСЯ
;PCODE: $00000A46 VOL: 0
;PCODE: $00000A47 VOL: 0
;PCODE: $00000A48 VOL: 0
; 0000 0331             sprintf(buff,"(!) ОШИБКА ");            ShowBigLine(0);
;PCODE: $00000A49 VOL: 0
;PCODE: $00000A4A VOL: 0
;PCODE: $00000A4B VOL: 0
;PCODE: $00000A4C VOL: 0
;PCODE: $00000A4D VOL: 0
;PCODE: $00000A4E VOL: 0
;PCODE: $00000A4F VOL: 0
;PCODE: $00000A50 VOL: 0
;PCODE: $00000A51 VOL: 0
;PCODE: $00000A52 VOL: 0
;PCODE: $00000A53 VOL: 0
; 0000 0332             sprintf(buff," НЕ ЗАПУСК ");            ShowBigLine(3);
;PCODE: $00000A54 VOL: 0
;PCODE: $00000A55 VOL: 0
;PCODE: $00000A56 VOL: 0
;PCODE: $00000A57 VOL: 0
;PCODE: $00000A58 VOL: 0
;PCODE: $00000A59 VOL: 0
;PCODE: $00000A5A VOL: 0
;PCODE: $00000A5B VOL: 0
;PCODE: $00000A5C VOL: 0
;PCODE: $00000A5D VOL: 0
;PCODE: $00000A5E VOL: 0
; 0000 0333 //            sprintf(buff,"      ДЛЯ СБРОСА      "); ShowLine(INFOLINE1);
; 0000 0334 //            sprintf(buff,"   УДЕРЖИВАЙ  'ВВОД'  "); ShowLine(INFOLINE2);
; 0000 0335             sprintf(buff,"  ДЛЯ СБРОСА >'ВВОД'  "); ShowLine(INFOLINE1);
;PCODE: $00000A5F VOL: 0
;PCODE: $00000A60 VOL: 0
;PCODE: $00000A61 VOL: 0
;PCODE: $00000A62 VOL: 0
;PCODE: $00000A63 VOL: 0
;PCODE: $00000A64 VOL: 0
;PCODE: $00000A65 VOL: 0
;PCODE: $00000A66 VOL: 0
;PCODE: $00000A67 VOL: 0
;PCODE: $00000A68 VOL: 0
;PCODE: $00000A69 VOL: 0
; 0000 0336             delay_ms(ONE_SECOND);
;PCODE: $00000A6A VOL: 0
;PCODE: $00000A6B VOL: 0
; 0000 0337             LCD_Blinc(QUARTER_SECOND,3);
;PCODE: $00000A6C VOL: 0
;PCODE: $00000A6D VOL: 0
;PCODE: $00000A6E VOL: 0
;PCODE: $00000A6F VOL: 0
; 0000 0338             if(enter>GO_TO_OPTIONS){PositionPointer=LAST_MODE_MENU;enter=2;LCD_Clear();}
;PCODE: $00000A70 VOL: 0
;PCODE: $00000A71 VOL: 0
;PCODE: $00000A72 VOL: 0
;PCODE: $00000A73 VOL: 0
;PCODE: $00000A74 VOL: 0
;PCODE: $00000A75 VOL: 0
;PCODE: $00000A76 VOL: 0
;PCODE: $00000A77 VOL: 0
; 0000 0339         break;
;PCODE: $00000A78 VOL: 0
;PCODE: $00000A79 VOL: 0
; 0000 033A     ///////////////////////////////////////////////////////////////////////////////
; 0000 033B         case 41: // АВАРИЯ НЕТ ТОКА ОТ ГЕНЕРАТОРА
;PCODE: $00000A7A VOL: 0
;PCODE: $00000A7B VOL: 0
;PCODE: $00000A7C VOL: 0
; 0000 033C             sprintf(buff,"(!) ОШИБКА ");            ShowBigLine(0);
;PCODE: $00000A7D VOL: 0
;PCODE: $00000A7E VOL: 0
;PCODE: $00000A7F VOL: 0
;PCODE: $00000A80 VOL: 0
;PCODE: $00000A81 VOL: 0
;PCODE: $00000A82 VOL: 0
;PCODE: $00000A83 VOL: 0
;PCODE: $00000A84 VOL: 0
;PCODE: $00000A85 VOL: 0
;PCODE: $00000A86 VOL: 0
;PCODE: $00000A87 VOL: 0
; 0000 033D             sprintf(buff," НЕТ ТОКА  ");            ShowBigLine(3);
;PCODE: $00000A88 VOL: 0
;PCODE: $00000A89 VOL: 0
;PCODE: $00000A8A VOL: 0
;PCODE: $00000A8B VOL: 0
;PCODE: $00000A8C VOL: 0
;PCODE: $00000A8D VOL: 0
;PCODE: $00000A8E VOL: 0
;PCODE: $00000A8F VOL: 0
;PCODE: $00000A90 VOL: 0
;PCODE: $00000A91 VOL: 0
;PCODE: $00000A92 VOL: 0
; 0000 033E             sprintf(buff,"  ДЛЯ СБРОСА >'ВВОД'  "); ShowLine(INFOLINE1);
;PCODE: $00000A93 VOL: 0
;PCODE: $00000A94 VOL: 0
;PCODE: $00000A95 VOL: 0
;PCODE: $00000A96 VOL: 0
;PCODE: $00000A97 VOL: 0
;PCODE: $00000A98 VOL: 0
;PCODE: $00000A99 VOL: 0
;PCODE: $00000A9A VOL: 0
;PCODE: $00000A9B VOL: 0
;PCODE: $00000A9C VOL: 0
;PCODE: $00000A9D VOL: 0
; 0000 033F             delay_ms(ONE_SECOND);
;PCODE: $00000A9E VOL: 0
;PCODE: $00000A9F VOL: 0
; 0000 0340             LCD_Blinc(QUARTER_SECOND,3);
;PCODE: $00000AA0 VOL: 0
;PCODE: $00000AA1 VOL: 0
;PCODE: $00000AA2 VOL: 0
;PCODE: $00000AA3 VOL: 0
; 0000 0341             if(enter>GO_TO_OPTIONS){PositionPointer=LAST_MODE_MENU;enter=2;LCD_Clear();}
;PCODE: $00000AA4 VOL: 0
;PCODE: $00000AA5 VOL: 0
;PCODE: $00000AA6 VOL: 0
;PCODE: $00000AA7 VOL: 0
;PCODE: $00000AA8 VOL: 0
;PCODE: $00000AA9 VOL: 0
;PCODE: $00000AAA VOL: 0
;PCODE: $00000AAB VOL: 0
; 0000 0342         break;
;PCODE: $00000AAC VOL: 0
;PCODE: $00000AAD VOL: 0
; 0000 0343     ///////////////////////////////////////////////////////////////////////////////
; 0000 0344         case 42: // АВАРИЯ НЕТ ТОКА ОТ ГЕНЕРАТОРА
;PCODE: $00000AAE VOL: 0
;PCODE: $00000AAF VOL: 0
;PCODE: $00000AB0 VOL: 0
; 0000 0345             LINE_REL=1;  // відключаємо МЕРЕЖУ     !!!
;PCODE: $00000AB1 VOL: 0
;PCODE: $00000AB2 VOL: 0
; 0000 0346             GEN_REL=0;  // відключаємо ГЕНЕРАТОР
;PCODE: $00000AB3 VOL: 0
;PCODE: $00000AB4 VOL: 0
; 0000 0347             ON_REL =0;  //вимикаємо: запалення OUT7
;PCODE: $00000AB5 VOL: 0
;PCODE: $00000AB6 VOL: 0
; 0000 0348             VALVE_U_REL=0;  //заслонку OUT5 (Port4)
;PCODE: $00000AB7 VOL: 0
;PCODE: $00000AB8 VOL: 0
; 0000 0349             VALVE_D_REL=0;
;PCODE: $00000AB9 VOL: 0
;PCODE: $00000ABA VOL: 0
; 0000 034A             STARTER_REL=0;  //вимикаємо стартер OUT6
;PCODE: $00000ABB VOL: 0
;PCODE: $00000ABC VOL: 0
; 0000 034B 
; 0000 034C 
; 0000 034D 
; 0000 034E             sprintf(buff,"(!) ЗАЩИТА ");        ShowBigLine(0);
;PCODE: $00000ABD VOL: 0
;PCODE: $00000ABE VOL: 0
;PCODE: $00000ABF VOL: 0
;PCODE: $00000AC0 VOL: 0
;PCODE: $00000AC1 VOL: 0
;PCODE: $00000AC2 VOL: 0
;PCODE: $00000AC3 VOL: 0
;PCODE: $00000AC4 VOL: 0
;PCODE: $00000AC5 VOL: 0
;PCODE: $00000AC6 VOL: 0
;PCODE: $00000AC7 VOL: 0
; 0000 034F             if(U1<255){
;PCODE: $00000AC8 VOL: 0
;PCODE: $00000AC9 VOL: 0
;PCODE: $00000ACA VOL: 0
; 0000 0350             sprintf(buff," Uin =%4.uB",U1);     ShowBigLine(3);
;PCODE: $00000ACB VOL: 0
;PCODE: $00000ACC VOL: 0
;PCODE: $00000ACD VOL: 0
;PCODE: $00000ACE VOL: 0
;PCODE: $00000ACF VOL: 0
;PCODE: $00000AD0 VOL: 0
;PCODE: $00000AD1 VOL: 0
;PCODE: $00000AD2 VOL: 0
;PCODE: $00000AD3 VOL: 0
;PCODE: $00000AD4 VOL: 0
;PCODE: $00000AD5 VOL: 0
;PCODE: $00000AD6 VOL: 0
;PCODE: $00000AD7 VOL: 0
;PCODE: $00000AD8 VOL: 0
; 0000 0351             sprintf(buff,"  ДЛЯ СБРОСА >'ВВОД'  "); ShowLine(INFOLINE1);
;PCODE: $00000AD9 VOL: 0
;PCODE: $00000ADA VOL: 0
;PCODE: $00000ADB VOL: 0
;PCODE: $00000ADC VOL: 0
;PCODE: $00000ADD VOL: 0
;PCODE: $00000ADE VOL: 0
;PCODE: $00000ADF VOL: 0
;PCODE: $00000AE0 VOL: 0
;PCODE: $00000AE1 VOL: 0
;PCODE: $00000AE2 VOL: 0
;PCODE: $00000AE3 VOL: 0
; 0000 0352             }
; 0000 0353             else
;PCODE: $00000AE4 VOL: 0
;PCODE: $00000AE5 VOL: 0
; 0000 0354             {
; 0000 0355             sprintf(buff,"!Uin > 260В!");       ShowBigLine(3);
;PCODE: $00000AE6 VOL: 0
;PCODE: $00000AE7 VOL: 0
;PCODE: $00000AE8 VOL: 0
;PCODE: $00000AE9 VOL: 0
;PCODE: $00000AEA VOL: 0
;PCODE: $00000AEB VOL: 0
;PCODE: $00000AEC VOL: 0
;PCODE: $00000AED VOL: 0
;PCODE: $00000AEE VOL: 0
;PCODE: $00000AEF VOL: 0
;PCODE: $00000AF0 VOL: 0
; 0000 0356             sprintf(buff,"  ВЫСОКОЕ НАПРЯЖЕНИЕ !"); ShowLine(INFOLINE1);
;PCODE: $00000AF1 VOL: 0
;PCODE: $00000AF2 VOL: 0
;PCODE: $00000AF3 VOL: 0
;PCODE: $00000AF4 VOL: 0
;PCODE: $00000AF5 VOL: 0
;PCODE: $00000AF6 VOL: 0
;PCODE: $00000AF7 VOL: 0
;PCODE: $00000AF8 VOL: 0
;PCODE: $00000AF9 VOL: 0
;PCODE: $00000AFA VOL: 0
;PCODE: $00000AFB VOL: 0
; 0000 0357 //            sprintf(buff,"       СЕТИ !         "); ShowLine(INFOLINE2);
; 0000 0358             }
;PCODE: $00000AFC VOL: 0
; 0000 0359             delay_ms(ONE_SECOND);
;PCODE: $00000AFD VOL: 0
;PCODE: $00000AFE VOL: 0
; 0000 035A             LCD_Blinc(QUARTER_SECOND,3);
;PCODE: $00000AFF VOL: 0
;PCODE: $00000B00 VOL: 0
;PCODE: $00000B01 VOL: 0
;PCODE: $00000B02 VOL: 0
; 0000 035B             if((U1<255)&(enter>GO_TO_OPTIONS)){PositionPointer=LAST_MODE_MENU;PORTD.0=0;enter=2;LCD_Clear();} // PORTD.0 ...
;PCODE: $00000B03 VOL: 0
;PCODE: $00000B04 VOL: 0
;PCODE: $00000B05 VOL: 0
;PCODE: $00000B06 VOL: 0
;PCODE: $00000B07 VOL: 0
;PCODE: $00000B08 VOL: 0
;PCODE: $00000B09 VOL: 0
;PCODE: $00000B0A VOL: 0
;PCODE: $00000B0B VOL: 0
;PCODE: $00000B0C VOL: 0
;PCODE: $00000B0D VOL: 0
;PCODE: $00000B0E VOL: 0
;PCODE: $00000B0F VOL: 0
;PCODE: $00000B10 VOL: 0
;PCODE: $00000B11 VOL: 0
;PCODE: $00000B12 VOL: 0
; 0000 035C         break;
;PCODE: $00000B13 VOL: 0
;PCODE: $00000B14 VOL: 0
; 0000 035D     ///////////////////////////////////////////////////////////////////////////////
; 0000 035E     };// switch (PositionPointer)
;PCODE: $00000B15 VOL: 0
; 0000 035F     begin:
;PCODE: $00000B16 VOL: 0
; 0000 0360     } //while
;PCODE: $00000B17 VOL: 0
;PCODE: $00000B18 VOL: 0
; 0000 0361 
; 0000 0362 } //main
;PCODE: $00000B19 VOL: 0
;PCODE: $00000B1A VOL: 0
;PCODE: $00000B1B VOL: 0
;
;
